ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Start,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Start, %function
  25              	UART_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint16 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint16 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 77 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 3


  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  40              		.loc 1 79 0
  41 0002 154D     		ldr	r5, .L5
  42 0004 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
  43 0006 94B9     		cbnz	r4, .L2
  44              	.LBB6:
  45              	.LBB7:
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 4


 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  46              		.loc 1 132 0
  47 0008 1449     		ldr	r1, .L5+4
  48 000a 2046     		mov	r0, r4
  49 000c FFF7FEFF 		bl	CyIntSetVector
  50              	.LVL0:
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  51              		.loc 1 133 0
  52 0010 2046     		mov	r0, r4
  53 0012 0721     		movs	r1, #7
  54 0014 FFF7FEFF 		bl	CyIntSetPriority
  55              	.LVL1:
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  56              		.loc 1 138 0
  57 0018 114E     		ldr	r6, .L5+8
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  58              		.loc 1 139 0
  59 001a 1248     		ldr	r0, .L5+12
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
  60              		.loc 1 148 0
  61 001c 124A     		ldr	r2, .L5+16
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  62              		.loc 1 138 0
  63 001e 0627     		movs	r7, #6
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  64              		.loc 1 139 0
  65 0020 4724     		movs	r4, #71
  66              		.loc 1 148 0
  67 0022 0221     		movs	r1, #2
  68              	.LBE7:
  69              	.LBE6:
  82:Generated_Source\PSoC5/UART.c ****     }
  70              		.loc 1 82 0
  71 0024 0123     		movs	r3, #1
  72              	.LBB9:
  73              	.LBB8:
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  74              		.loc 1 138 0
  75 0026 3770     		strb	r7, [r6]
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 5


  76              		.loc 1 139 0
  77 0028 0470     		strb	r4, [r0]
  78              		.loc 1 148 0
  79 002a 1170     		strb	r1, [r2]
  80              	.LBE8:
  81              	.LBE9:
  82:Generated_Source\PSoC5/UART.c ****     }
  82              		.loc 1 82 0
  83 002c 2B70     		strb	r3, [r5]
  84              	.L2:
  85              	.LBB10:
  86              	.LBB11:
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  87              		.loc 1 186 0
  88 002e FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL2:
  90 0032 0446     		mov	r4, r0
  91              	.LVL3:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 6


 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  92              		.loc 1 211 0
  93 0034 0D49     		ldr	r1, .L5+20
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
  94              		.loc 1 214 0
  95 0036 0E48     		ldr	r0, .L5+24
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
  96              		.loc 1 211 0
  97 0038 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 213:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
  98              		.loc 1 213 0
  99 003a 0E4D     		ldr	r5, .L5+28
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 100              		.loc 1 211 0
 101 003c 43F01003 		orr	r3, r3, #16
 213:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 102              		.loc 1 213 0
 103 0040 0122     		movs	r2, #1
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 104              		.loc 1 211 0
 105 0042 0B70     		strb	r3, [r1]
 213:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 106              		.loc 1 213 0
 107 0044 2A60     		str	r2, [r5]
 108              		.loc 1 214 0
 109 0046 0260     		str	r2, [r0]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 110              		.loc 1 219 0
 111 0048 FFF7FEFF 		bl	UART_IntClock_Start
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 7


 112              	.LVL4:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 113              		.loc 1 222 0
 114 004c 2046     		mov	r0, r4
 115              	.LBE11:
 116              	.LBE10:
  86:Generated_Source\PSoC5/UART.c **** 
 117              		.loc 1 86 0
 118 004e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 119              		.cfi_restore 14
 120              		.cfi_restore 7
 121              		.cfi_restore 6
 122              		.cfi_restore 5
 123              		.cfi_restore 4
 124              		.cfi_restore 3
 125              		.cfi_def_cfa_offset 0
 126              	.LVL5:
 127              	.LBB13:
 128              	.LBB12:
 129              		.loc 1 222 0
 130 0052 FFF7FEBF 		b	CyExitCriticalSection
 131              	.LVL6:
 132              	.L6:
 133 0056 00BF     		.align	2
 134              	.L5:
 135 0058 00000000 		.word	.LANCHOR0
 136 005c 00000000 		.word	UART_TXISR
 137 0060 2A650040 		.word	1073767722
 138 0064 3A650040 		.word	1073767738
 139 0068 8B650040 		.word	1073767819
 140 006c 9B650040 		.word	1073767835
 141 0070 00E100E0 		.word	-536813312
 142 0074 80E200E0 		.word	-536812928
 143              	.LBE12:
 144              	.LBE13:
 145              		.cfi_endproc
 146              	.LFE0:
 147              		.size	UART_Start, .-UART_Start
 148              		.section	.text.UART_Init,"ax",%progbits
 149              		.align	2
 150              		.global	UART_Init
 151              		.thumb
 152              		.thumb_func
 153              		.type	UART_Init, %function
 154              	UART_Init:
 155              	.LFB1:
 107:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 156              		.loc 1 107 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 38B5     		push	{r3, r4, r5, lr}
 161              		.cfi_def_cfa_offset 16
 162              		.cfi_offset 3, -16
 163              		.cfi_offset 4, -12
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 8


 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 132:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 166              		.loc 1 132 0
 167 0002 0949     		ldr	r1, .L9
 168 0004 0020     		movs	r0, #0
 169 0006 FFF7FEFF 		bl	CyIntSetVector
 170              	.LVL7:
 133:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 171              		.loc 1 133 0
 172 000a 0721     		movs	r1, #7
 173 000c 0020     		movs	r0, #0
 174 000e FFF7FEFF 		bl	CyIntSetPriority
 175              	.LVL8:
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 176              		.loc 1 138 0
 177 0012 064C     		ldr	r4, .L9+4
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 178              		.loc 1 139 0
 179 0014 0649     		ldr	r1, .L9+8
 148:Generated_Source\PSoC5/UART.c ****         #else
 180              		.loc 1 148 0
 181 0016 074B     		ldr	r3, .L9+12
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 182              		.loc 1 138 0
 183 0018 0625     		movs	r5, #6
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 184              		.loc 1 139 0
 185 001a 4720     		movs	r0, #71
 148:Generated_Source\PSoC5/UART.c ****         #else
 186              		.loc 1 148 0
 187 001c 0222     		movs	r2, #2
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 188              		.loc 1 138 0
 189 001e 2570     		strb	r5, [r4]
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 190              		.loc 1 139 0
 191 0020 0870     		strb	r0, [r1]
 148:Generated_Source\PSoC5/UART.c ****         #else
 192              		.loc 1 148 0
 193 0022 1A70     		strb	r2, [r3]
 194 0024 38BD     		pop	{r3, r4, r5, pc}
 195              	.L10:
 196 0026 00BF     		.align	2
 197              	.L9:
 198 0028 00000000 		.word	UART_TXISR
 199 002c 2A650040 		.word	1073767722
 200 0030 3A650040 		.word	1073767738
 201 0034 8B650040 		.word	1073767819
 202              		.cfi_endproc
 203              	.LFE1:
 204              		.size	UART_Init, .-UART_Init
 205              		.section	.text.UART_Enable,"ax",%progbits
 206              		.align	2
 207              		.global	UART_Enable
 208              		.thumb
 209              		.thumb_func
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 9


 210              		.type	UART_Enable, %function
 211              	UART_Enable:
 212              	.LFB2:
 184:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 213              		.loc 1 184 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 38B5     		push	{r3, r4, r5, lr}
 218              		.cfi_def_cfa_offset 16
 219              		.cfi_offset 3, -16
 220              		.cfi_offset 4, -12
 221              		.cfi_offset 5, -8
 222              		.cfi_offset 14, -4
 186:Generated_Source\PSoC5/UART.c **** 
 223              		.loc 1 186 0
 224 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 225              	.LVL9:
 226 0006 0446     		mov	r4, r0
 227              	.LVL10:
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 228              		.loc 1 211 0
 229 0008 0849     		ldr	r1, .L13
 214:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 230              		.loc 1 214 0
 231 000a 0948     		ldr	r0, .L13+4
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 232              		.loc 1 211 0
 233 000c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 213:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 234              		.loc 1 213 0
 235 000e 094D     		ldr	r5, .L13+8
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 236              		.loc 1 211 0
 237 0010 43F01003 		orr	r3, r3, #16
 213:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 238              		.loc 1 213 0
 239 0014 0122     		movs	r2, #1
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 240              		.loc 1 211 0
 241 0016 0B70     		strb	r3, [r1]
 213:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 242              		.loc 1 213 0
 243 0018 2A60     		str	r2, [r5]
 214:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 244              		.loc 1 214 0
 245 001a 0260     		str	r2, [r0]
 219:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 246              		.loc 1 219 0
 247 001c FFF7FEFF 		bl	UART_IntClock_Start
 248              	.LVL11:
 249              		.loc 1 222 0
 250 0020 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART.c **** }
 251              		.loc 1 223 0
 252 0022 BDE83840 		pop	{r3, r4, r5, lr}
 253              		.cfi_restore 14
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 10


 254              		.cfi_restore 5
 255              		.cfi_restore 4
 256              		.cfi_restore 3
 257              		.cfi_def_cfa_offset 0
 258              	.LVL12:
 222:Generated_Source\PSoC5/UART.c **** }
 259              		.loc 1 222 0
 260 0026 FFF7FEBF 		b	CyExitCriticalSection
 261              	.LVL13:
 262              	.L14:
 263 002a 00BF     		.align	2
 264              	.L13:
 265 002c 9B650040 		.word	1073767835
 266 0030 00E100E0 		.word	-536813312
 267 0034 80E200E0 		.word	-536812928
 268              		.cfi_endproc
 269              	.LFE2:
 270              		.size	UART_Enable, .-UART_Enable
 271              		.section	.text.UART_Stop,"ax",%progbits
 272              		.align	2
 273              		.global	UART_Stop
 274              		.thumb
 275              		.thumb_func
 276              		.type	UART_Stop, %function
 277              	UART_Stop:
 278              	.LFB3:
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 279              		.loc 1 241 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 38B5     		push	{r3, r4, r5, lr}
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 3, -16
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 5, -8
 288              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 289              		.loc 1 243 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 11


 290 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 291              	.LVL14:
 292 0006 0546     		mov	r5, r0
 293              	.LVL15:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 294              		.loc 1 257 0
 295 0008 FFF7FEFF 		bl	UART_IntClock_Stop
 296              	.LVL16:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 297              		.loc 1 270 0
 298 000c 064A     		ldr	r2, .L17
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 299              		.loc 1 273 0
 300 000e 0749     		ldr	r1, .L17+4
 270:Generated_Source\PSoC5/UART.c **** 
 301              		.loc 1 270 0
 302 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 303              		.loc 1 273 0
 304 0012 0124     		movs	r4, #1
 270:Generated_Source\PSoC5/UART.c **** 
 305              		.loc 1 270 0
 306 0014 03F0EF03 		and	r3, r3, #239
 307 0018 1370     		strb	r3, [r2]
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 308              		.loc 1 277 0
 309 001a 2846     		mov	r0, r5
 273:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 12


 310              		.loc 1 273 0
 311 001c 0C60     		str	r4, [r1]
 278:Generated_Source\PSoC5/UART.c **** }
 312              		.loc 1 278 0
 313 001e BDE83840 		pop	{r3, r4, r5, lr}
 314              		.cfi_restore 14
 315              		.cfi_restore 5
 316              		.cfi_restore 4
 317              		.cfi_restore 3
 318              		.cfi_def_cfa_offset 0
 319              	.LVL17:
 277:Generated_Source\PSoC5/UART.c **** }
 320              		.loc 1 277 0
 321 0022 FFF7FEBF 		b	CyExitCriticalSection
 322              	.LVL18:
 323              	.L18:
 324 0026 00BF     		.align	2
 325              	.L17:
 326 0028 9B650040 		.word	1073767835
 327 002c 80E100E0 		.word	-536813184
 328              		.cfi_endproc
 329              	.LFE3:
 330              		.size	UART_Stop, .-UART_Stop
 331              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 332              		.align	2
 333              		.global	UART_ReadControlRegister
 334              		.thumb
 335              		.thumb_func
 336              		.type	UART_ReadControlRegister, %function
 337              	UART_ReadControlRegister:
 338              	.LFB4:
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 339              		.loc 1 296 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 13


 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 344              		.loc 1 302 0
 345 0000 0020     		movs	r0, #0
 346 0002 7047     		bx	lr
 347              		.cfi_endproc
 348              	.LFE4:
 349              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 350              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 351              		.align	2
 352              		.global	UART_WriteControlRegister
 353              		.thumb
 354              		.thumb_func
 355              		.type	UART_WriteControlRegister, %function
 356              	UART_WriteControlRegister:
 357              	.LFB18:
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE18:
 365              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 366 0002 00BF     		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 367              		.align	2
 368              		.global	UART_SetTxInterruptMode
 369              		.thumb
 370              		.thumb_func
 371              		.type	UART_SetTxInterruptMode, %function
 372              	UART_SetTxInterruptMode:
 373              	.LFB6:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 14


 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 15


 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 16


 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 17


 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 18


 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 19


 612:Generated_Source\PSoC5/UART.c ****     }
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 20


 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 21


 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 22


 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 23


 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 24


 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 374              		.loc 1 909 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379              	.LVL19:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 380              		.loc 1 910 0
 381 0000 014B     		ldr	r3, .L22
 382 0002 1870     		strb	r0, [r3]
 383 0004 7047     		bx	lr
 384              	.L23:
 385 0006 00BF     		.align	2
 386              	.L22:
 387 0008 8B650040 		.word	1073767819
 388              		.cfi_endproc
 389              	.LFE6:
 390              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 391              		.section	.text.UART_WriteTxData,"ax",%progbits
 392              		.align	2
 393              		.global	UART_WriteTxData
 394              		.thumb
 395              		.thumb_func
 396              		.type	UART_WriteTxData, %function
 397              	UART_WriteTxData:
 398              	.LFB7:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 25


 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 399              		.loc 1 943 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL20:
 405 0000 10B4     		push	{r4}
 406              		.cfi_def_cfa_offset 4
 407              		.cfi_offset 4, -4
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 408              		.loc 1 945 0
 409 0002 114B     		ldr	r3, .L35
 410 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 411 0006 AAB1     		cbz	r2, .L24
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 412              		.loc 1 950 0
 413 0008 104A     		ldr	r2, .L35+4
 414 000a 0121     		movs	r1, #1
 415 000c 1160     		str	r1, [r2]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 416              		.loc 1 952 0
 417 000e 5988     		ldrh	r1, [r3, #2]
 418 0010 9A88     		ldrh	r2, [r3, #4]
 419 0012 89B2     		uxth	r1, r1
 420 0014 9142     		cmp	r1, r2
 421 0016 0FD0     		beq	.L34
 422              	.L26:
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 423              		.loc 1 960 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 26


 424 0018 B2F5005F 		cmp	r2, #8192
 425 001c 38BF     		it	cc
 426 001e 511C     		addcc	r1, r2, #1
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 427              		.loc 1 965 0
 428 0020 0B4C     		ldr	r4, .L35+8
 429 0022 32BF     		itee	cc
 430 0024 89B2     		uxthcc	r1, r1
 431 0026 0121     		movcs	r1, #1
 432 0028 0022     		movcs	r2, #0
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 433              		.loc 1 968 0
 434 002a 9980     		strh	r1, [r3, #4]	@ movhi
 965:Generated_Source\PSoC5/UART.c **** 
 435              		.loc 1 965 0
 436 002c A054     		strb	r0, [r4, r2]
 437              	.L27:
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 438              		.loc 1 971 0
 439 002e 094B     		ldr	r3, .L35+12
 440 0030 0122     		movs	r2, #1
 441 0032 1A60     		str	r2, [r3]
 442              	.L24:
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 443              		.loc 1 980 0
 444 0034 10BC     		pop	{r4}
 445              		.cfi_remember_state
 446              		.cfi_restore 4
 447              		.cfi_def_cfa_offset 0
 448 0036 7047     		bx	lr
 449              	.L34:
 450              		.cfi_restore_state
 953:Generated_Source\PSoC5/UART.c ****             {
 451              		.loc 1 953 0 discriminator 1
 452 0038 0749     		ldr	r1, .L35+16
 453 003a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 454              		.loc 1 952 0 discriminator 1
 455 003c 4907     		lsls	r1, r1, #29
 456 003e EBD4     		bmi	.L26
 956:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 27


 457              		.loc 1 956 0
 458 0040 064B     		ldr	r3, .L35+20
 459 0042 1870     		strb	r0, [r3]
 460 0044 F3E7     		b	.L27
 461              	.L36:
 462 0046 00BF     		.align	2
 463              	.L35:
 464 0048 00000000 		.word	.LANCHOR0
 465 004c 80E100E0 		.word	-536813184
 466 0050 00000000 		.word	UART_txBuffer
 467 0054 00E100E0 		.word	-536813312
 468 0058 6B650040 		.word	1073767787
 469 005c 4B650040 		.word	1073767755
 470              		.cfi_endproc
 471              	.LFE7:
 472              		.size	UART_WriteTxData, .-UART_WriteTxData
 473              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 474              		.align	2
 475              		.global	UART_ReadTxStatus
 476              		.thumb
 477              		.thumb_func
 478              		.type	UART_ReadTxStatus, %function
 479              	UART_ReadTxStatus:
 480              	.LFB8:
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 481              		.loc 1 1004 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 486              		.loc 1 1005 0
 487 0000 014B     		ldr	r3, .L38
 488 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 28


1006:Generated_Source\PSoC5/UART.c ****     }
 489              		.loc 1 1006 0
 490 0004 7047     		bx	lr
 491              	.L39:
 492 0006 00BF     		.align	2
 493              	.L38:
 494 0008 6B650040 		.word	1073767787
 495              		.cfi_endproc
 496              	.LFE8:
 497              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 498              		.section	.text.UART_PutChar,"ax",%progbits
 499              		.align	2
 500              		.global	UART_PutChar
 501              		.thumb
 502              		.thumb_func
 503              		.type	UART_PutChar, %function
 504              	UART_PutChar:
 505              	.LFB9:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 506              		.loc 1 1042 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 29


 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL21:
 512 0000 F0B4     		push	{r4, r5, r6, r7}
 513              		.cfi_def_cfa_offset 16
 514              		.cfi_offset 4, -16
 515              		.cfi_offset 5, -12
 516              		.cfi_offset 6, -8
 517              		.cfi_offset 7, -4
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint16 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint16 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 518              		.loc 1 1069 0
 519 0002 41F6FF77 		movw	r7, #8191
 520 0006 194D     		ldr	r5, .L52
 521 0008 AC88     		ldrh	r4, [r5, #4]
 522              	.L41:
1060:Generated_Source\PSoC5/UART.c **** 
 523              		.loc 1 1060 0
 524 000a 6B88     		ldrh	r3, [r5, #2]
1068:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 525              		.loc 1 1068 0
 526 000c 2646     		mov	r6, r4
1060:Generated_Source\PSoC5/UART.c **** 
 527              		.loc 1 1060 0
 528 000e 9BB2     		uxth	r3, r3
 529              		.loc 1 1069 0
 530 0010 591E     		subs	r1, r3, #1
 531 0012 E21A     		subs	r2, r4, r3
 532 0014 091B     		subs	r1, r1, r4
 533 0016 D21B     		subs	r2, r2, r7
 534 0018 B1FA81F1 		clz	r1, r1
 535 001c B2FA82F2 		clz	r2, r2
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 30


 536 0020 4909     		lsrs	r1, r1, #5
 537 0022 5209     		lsrs	r2, r2, #5
 538 0024 A342     		cmp	r3, r4
 539 0026 88BF     		it	hi
 540 0028 0A46     		movhi	r2, r1
 541 002a 002A     		cmp	r2, #0
 542 002c EDD1     		bne	.L41
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 543              		.loc 1 1071 0
 544 002e A342     		cmp	r3, r4
 545 0030 13D0     		beq	.L51
 546              	.L42:
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
 547              		.loc 1 1079 0
 548 0032 B4F5005F 		cmp	r4, #8192
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 549              		.loc 1 1084 0
 550 0036 0E4A     		ldr	r2, .L52+4
 551 0038 28BF     		it	cs
 552 003a 0026     		movcs	r6, #0
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 553              		.loc 1 1098 0
 554 003c 0D4B     		ldr	r3, .L52+8
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 555              		.loc 1 1084 0
 556 003e 9055     		strb	r0, [r2, r6]
 557              		.loc 1 1098 0
 558 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559 0042 3ABF     		itte	cc
 560 0044 0134     		addcc	r4, r4, #1
 561 0046 A4B2     		uxthcc	r4, r4
 562 0048 0124     		movcs	r4, #1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 31


 563 004a 9B07     		lsls	r3, r3, #30
1092:Generated_Source\PSoC5/UART.c **** 
 564              		.loc 1 1092 0
 565 004c AC80     		strh	r4, [r5, #4]	@ movhi
 566              		.loc 1 1098 0
 567 004e 02D5     		bpl	.L40
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
 568              		.loc 1 1101 0
 569 0050 094B     		ldr	r3, .L52+12
 570 0052 0122     		movs	r2, #1
 571 0054 1A60     		str	r2, [r3]
 572              	.L40:
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
 573              		.loc 1 1116 0
 574 0056 F0BC     		pop	{r4, r5, r6, r7}
 575              		.cfi_remember_state
 576              		.cfi_restore 7
 577              		.cfi_restore 6
 578              		.cfi_restore 5
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581 0058 7047     		bx	lr
 582              	.L51:
 583              		.cfi_restore_state
1072:Generated_Source\PSoC5/UART.c ****         {
 584              		.loc 1 1072 0 discriminator 1
 585 005a 064B     		ldr	r3, .L52+8
 586 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 587              		.loc 1 1071 0 discriminator 1
 588 005e 5A07     		lsls	r2, r3, #29
 589 0060 E7D4     		bmi	.L42
1075:Generated_Source\PSoC5/UART.c ****         }
 590              		.loc 1 1075 0
 591 0062 064B     		ldr	r3, .L52+16
 592 0064 1870     		strb	r0, [r3]
 593              		.loc 1 1116 0
 594 0066 F0BC     		pop	{r4, r5, r6, r7}
 595              		.cfi_restore 4
 596              		.cfi_restore 5
 597              		.cfi_restore 6
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 32


 598              		.cfi_restore 7
 599              		.cfi_def_cfa_offset 0
 600 0068 7047     		bx	lr
 601              	.L53:
 602 006a 00BF     		.align	2
 603              	.L52:
 604 006c 00000000 		.word	.LANCHOR0
 605 0070 00000000 		.word	UART_txBuffer
 606 0074 6B650040 		.word	1073767787
 607 0078 00E200E0 		.word	-536813056
 608 007c 4B650040 		.word	1073767755
 609              		.cfi_endproc
 610              	.LFE9:
 611              		.size	UART_PutChar, .-UART_PutChar
 612              		.section	.text.UART_PutString,"ax",%progbits
 613              		.align	2
 614              		.global	UART_PutString
 615              		.thumb
 616              		.thumb_func
 617              		.type	UART_PutString, %function
 618              	UART_PutString:
 619              	.LFB10:
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 620              		.loc 1 1146 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL22:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 33


 625 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 626              		.cfi_def_cfa_offset 36
 627              		.cfi_offset 4, -36
 628              		.cfi_offset 5, -32
 629              		.cfi_offset 6, -28
 630              		.cfi_offset 7, -24
 631              		.cfi_offset 8, -20
 632              		.cfi_offset 9, -16
 633              		.cfi_offset 10, -12
 634              		.cfi_offset 11, -8
 635              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 636              		.loc 1 1150 0
 637 0004 254D     		ldr	r5, .L73
 638 0006 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 639 0008 002B     		cmp	r3, #0
 640 000a 3DD0     		beq	.L54
 641 000c 8046     		mov	r8, r0
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 642              		.loc 1 1153 0
 643 000e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 644              	.LVL23:
 645 0010 0028     		cmp	r0, #0
 646 0012 39D0     		beq	.L54
 647              	.LBB16:
 648              	.LBB17:
1069:Generated_Source\PSoC5/UART.c **** 
 649              		.loc 1 1069 0
 650 0014 41F6FF77 		movw	r7, #8191
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 651              		.loc 1 1084 0
 652 0018 DFF88890 		ldr	r9, .L73+8
1098:Generated_Source\PSoC5/UART.c ****             {
 653              		.loc 1 1098 0
 654 001c DFF888C0 		ldr	ip, .L73+12
1101:Generated_Source\PSoC5/UART.c ****             }
 655              		.loc 1 1101 0
 656 0020 DFF888B0 		ldr	fp, .L73+16
 657              	.LBE17:
 658              	.LBE16:
 659              		.loc 1 1153 0
 660 0024 4FF0000E 		mov	lr, #0
 661              	.LBB20:
 662              	.LBB18:
1101:Generated_Source\PSoC5/UART.c ****             }
 663              		.loc 1 1101 0
 664 0028 4FF0010A 		mov	r10, #1
 665              	.LVL24:
 666              	.L61:
 667 002c A988     		ldrh	r1, [r5, #4]
 668              	.L57:
1060:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 34


 669              		.loc 1 1060 0
 670 002e 6A88     		ldrh	r2, [r5, #2]
1068:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 671              		.loc 1 1068 0
 672 0030 0C46     		mov	r4, r1
1060:Generated_Source\PSoC5/UART.c **** 
 673              		.loc 1 1060 0
 674 0032 92B2     		uxth	r2, r2
1069:Generated_Source\PSoC5/UART.c **** 
 675              		.loc 1 1069 0
 676 0034 561E     		subs	r6, r2, #1
 677 0036 8B1A     		subs	r3, r1, r2
 678 0038 761A     		subs	r6, r6, r1
 679 003a DB1B     		subs	r3, r3, r7
 680 003c B6FA86F6 		clz	r6, r6
 681 0040 B3FA83F3 		clz	r3, r3
 682 0044 7609     		lsrs	r6, r6, #5
 683 0046 5B09     		lsrs	r3, r3, #5
 684 0048 8A42     		cmp	r2, r1
 685 004a 88BF     		it	hi
 686 004c 3346     		movhi	r3, r6
 687 004e 002B     		cmp	r3, #0
 688 0050 EDD1     		bne	.L57
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 689              		.loc 1 1071 0
 690 0052 8A42     		cmp	r2, r1
 691 0054 1AD0     		beq	.L72
 692              	.L58:
1079:Generated_Source\PSoC5/UART.c ****             {
 693              		.loc 1 1079 0
 694 0056 B1F5005F 		cmp	r1, #8192
 695 005a 28BF     		it	cs
 696 005c 0024     		movcs	r4, #0
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 697              		.loc 1 1084 0
 698 005e 09F80400 		strb	r0, [r9, r4]
1098:Generated_Source\PSoC5/UART.c ****             {
 699              		.loc 1 1098 0
 700 0062 9CF80030 		ldrb	r3, [ip]	@ zero_extendqisi2
 701 0066 3ABF     		itte	cc
 702 0068 0131     		addcc	r1, r1, #1
 703 006a 89B2     		uxthcc	r1, r1
1079:Generated_Source\PSoC5/UART.c ****             {
 704              		.loc 1 1079 0
 705 006c 0121     		movcs	r1, #1
1098:Generated_Source\PSoC5/UART.c ****             {
 706              		.loc 1 1098 0
 707 006e 9B07     		lsls	r3, r3, #30
1092:Generated_Source\PSoC5/UART.c **** 
 708              		.loc 1 1092 0
 709 0070 A980     		strh	r1, [r5, #4]	@ movhi
1101:Generated_Source\PSoC5/UART.c ****             }
 710              		.loc 1 1101 0
 711 0072 48BF     		it	mi
 712 0074 CBF800A0 		strmi	r10, [fp]
 713              	.L59:
 714              	.LBE18:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 35


 715              	.LBE20:
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 716              		.loc 1 1156 0
 717 0078 0EF1010E 		add	lr, lr, #1
 718              	.LVL25:
 719 007c 1FFA8EFE 		uxth	lr, lr
 720              	.LVL26:
1153:Generated_Source\PSoC5/UART.c ****             {
 721              		.loc 1 1153 0
 722 0080 18F80E00 		ldrb	r0, [r8, lr]	@ zero_extendqisi2
 723 0084 0028     		cmp	r0, #0
 724 0086 D1D1     		bne	.L61
 725              	.LVL27:
 726              	.L54:
 727 0088 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 728              	.LVL28:
 729              	.L72:
 730              	.LBB21:
 731              	.LBB19:
1072:Generated_Source\PSoC5/UART.c ****         {
 732              		.loc 1 1072 0
 733 008c 9CF80030 		ldrb	r3, [ip]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 734              		.loc 1 1071 0
 735 0090 5A07     		lsls	r2, r3, #29
 736 0092 E0D4     		bmi	.L58
1075:Generated_Source\PSoC5/UART.c ****         }
 737              		.loc 1 1075 0
 738 0094 024B     		ldr	r3, .L73+4
 739 0096 1870     		strb	r0, [r3]
 740 0098 EEE7     		b	.L59
 741              	.L74:
 742 009a 00BF     		.align	2
 743              	.L73:
 744 009c 00000000 		.word	.LANCHOR0
 745 00a0 4B650040 		.word	1073767755
 746 00a4 00000000 		.word	UART_txBuffer
 747 00a8 6B650040 		.word	1073767787
 748 00ac 00E200E0 		.word	-536813056
 749              	.LBE19:
 750              	.LBE21:
 751              		.cfi_endproc
 752              	.LFE10:
 753              		.size	UART_PutString, .-UART_PutString
 754              		.section	.text.UART_PutArray,"ax",%progbits
 755              		.align	2
 756              		.global	UART_PutArray
 757              		.thumb
 758              		.thumb_func
 759              		.type	UART_PutArray, %function
 760              	UART_PutArray:
 761              	.LFB11:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 36


1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint16 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 762              		.loc 1 1193 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              	.LVL29:
 767 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 768              		.cfi_def_cfa_offset 36
 769              		.cfi_offset 4, -36
 770              		.cfi_offset 5, -32
 771              		.cfi_offset 6, -28
 772              		.cfi_offset 7, -24
 773              		.cfi_offset 8, -20
 774              		.cfi_offset 9, -16
 775              		.cfi_offset 10, -12
 776              		.cfi_offset 11, -8
 777              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 778              		.loc 1 1197 0
 779 0004 254C     		ldr	r4, .L94
 780 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 37


 781 0008 002B     		cmp	r3, #0
 782 000a 3ED0     		beq	.L75
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 783              		.loc 1 1199 0
 784 000c 0029     		cmp	r1, #0
 785 000e 3CD0     		beq	.L75
 786              	.LBB24:
 787              	.LBB25:
1069:Generated_Source\PSoC5/UART.c **** 
 788              		.loc 1 1069 0
 789 0010 41F6FF76 		movw	r6, #8191
 790 0014 01F1FF3C 		add	ip, r1, #-1
 791 0018 1FFA8CFC 		uxth	ip, ip
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 792              		.loc 1 1084 0
 793 001c DFF88490 		ldr	r9, .L94+8
1098:Generated_Source\PSoC5/UART.c ****             {
 794              		.loc 1 1098 0
 795 0020 DFF88480 		ldr	r8, .L94+12
1101:Generated_Source\PSoC5/UART.c ****             }
 796              		.loc 1 1101 0
 797 0024 DFF884B0 		ldr	fp, .L94+16
 798 0028 8444     		add	ip, ip, r0
 799 002a 471E     		subs	r7, r0, #1
 800 002c 4FF0010A 		mov	r10, #1
 801              	.LVL30:
 802              	.L82:
 803              	.LBE25:
 804              	.LBE24:
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 805              		.loc 1 1201 0
 806 0030 17F8015F 		ldrb	r5, [r7, #1]!	@ zero_extendqisi2
 807              	.LVL31:
 808 0034 A188     		ldrh	r1, [r4, #4]
 809              	.L78:
 810              	.LBB28:
 811              	.LBB26:
1060:Generated_Source\PSoC5/UART.c **** 
 812              		.loc 1 1060 0
 813 0036 6288     		ldrh	r2, [r4, #2]
1068:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 814              		.loc 1 1068 0
 815 0038 0846     		mov	r0, r1
1060:Generated_Source\PSoC5/UART.c **** 
 816              		.loc 1 1060 0
 817 003a 92B2     		uxth	r2, r2
1069:Generated_Source\PSoC5/UART.c **** 
 818              		.loc 1 1069 0
 819 003c 02F1FF3E 		add	lr, r2, #-1
 820 0040 8B1A     		subs	r3, r1, r2
 821 0042 C1EB0E0E 		rsb	lr, r1, lr
 822 0046 9B1B     		subs	r3, r3, r6
 823 0048 BEFA8EFE 		clz	lr, lr
 824 004c B3FA83F3 		clz	r3, r3
 825 0050 4FEA5E1E 		lsr	lr, lr, #5
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 38


 826 0054 5B09     		lsrs	r3, r3, #5
 827 0056 8A42     		cmp	r2, r1
 828 0058 88BF     		it	hi
 829 005a 7346     		movhi	r3, lr
 830 005c 002B     		cmp	r3, #0
 831 005e EAD1     		bne	.L78
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 832              		.loc 1 1071 0
 833 0060 8A42     		cmp	r2, r1
 834 0062 14D0     		beq	.L93
 835              	.L79:
1079:Generated_Source\PSoC5/UART.c ****             {
 836              		.loc 1 1079 0
 837 0064 B1F5005F 		cmp	r1, #8192
 838 0068 28BF     		it	cs
 839 006a 0020     		movcs	r0, #0
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 840              		.loc 1 1084 0
 841 006c 09F80050 		strb	r5, [r9, r0]
1098:Generated_Source\PSoC5/UART.c ****             {
 842              		.loc 1 1098 0
 843 0070 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 844 0074 3ABF     		itte	cc
 845 0076 0131     		addcc	r1, r1, #1
 846 0078 89B2     		uxthcc	r1, r1
1079:Generated_Source\PSoC5/UART.c ****             {
 847              		.loc 1 1079 0
 848 007a 0121     		movcs	r1, #1
1098:Generated_Source\PSoC5/UART.c ****             {
 849              		.loc 1 1098 0
 850 007c 9B07     		lsls	r3, r3, #30
1092:Generated_Source\PSoC5/UART.c **** 
 851              		.loc 1 1092 0
 852 007e A180     		strh	r1, [r4, #4]	@ movhi
1101:Generated_Source\PSoC5/UART.c ****             }
 853              		.loc 1 1101 0
 854 0080 48BF     		it	mi
 855 0082 CBF800A0 		strmi	r10, [fp]
 856              	.L80:
 857              	.LVL32:
 858              	.LBE26:
 859              	.LBE28:
1199:Generated_Source\PSoC5/UART.c ****             {
 860              		.loc 1 1199 0
 861 0086 BC45     		cmp	ip, r7
 862 0088 D2D1     		bne	.L82
 863              	.LVL33:
 864              	.L75:
 865 008a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 866              	.LVL34:
 867              	.L93:
 868              	.LBB29:
 869              	.LBB27:
1072:Generated_Source\PSoC5/UART.c ****         {
 870              		.loc 1 1072 0
 871 008e 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 39


 872              		.loc 1 1071 0
 873 0092 5A07     		lsls	r2, r3, #29
 874 0094 E6D4     		bmi	.L79
1075:Generated_Source\PSoC5/UART.c ****         }
 875              		.loc 1 1075 0
 876 0096 024B     		ldr	r3, .L94+4
 877 0098 1D70     		strb	r5, [r3]
 878 009a F4E7     		b	.L80
 879              	.L95:
 880              		.align	2
 881              	.L94:
 882 009c 00000000 		.word	.LANCHOR0
 883 00a0 4B650040 		.word	1073767755
 884 00a4 00000000 		.word	UART_txBuffer
 885 00a8 6B650040 		.word	1073767787
 886 00ac 00E200E0 		.word	-536813056
 887              	.LBE27:
 888              	.LBE29:
 889              		.cfi_endproc
 890              	.LFE11:
 891              		.size	UART_PutArray, .-UART_PutArray
 892              		.section	.text.UART_PutCRLF,"ax",%progbits
 893              		.align	2
 894              		.global	UART_PutCRLF
 895              		.thumb
 896              		.thumb_func
 897              		.type	UART_PutCRLF, %function
 898              	UART_PutCRLF:
 899              	.LFB12:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 40


1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 900              		.loc 1 1231 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905              	.LVL35:
 906 0000 F0B4     		push	{r4, r5, r6, r7}
 907              		.cfi_def_cfa_offset 16
 908              		.cfi_offset 4, -16
 909              		.cfi_offset 5, -12
 910              		.cfi_offset 6, -8
 911              		.cfi_offset 7, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 912              		.loc 1 1233 0
 913 0002 504C     		ldr	r4, .L131
 914 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 915 0006 0BB9     		cbnz	r3, .L127
 916              	.LVL36:
 917              	.L96:
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
 918              		.loc 1 1239 0
 919 0008 F0BC     		pop	{r4, r5, r6, r7}
 920              		.cfi_remember_state
 921              		.cfi_restore 7
 922              		.cfi_restore 6
 923              		.cfi_restore 5
 924              		.cfi_restore 4
 925              		.cfi_def_cfa_offset 0
 926 000a 7047     		bx	lr
 927              	.LVL37:
 928              	.L127:
 929              		.cfi_restore_state
 930              	.LBB36:
 931              	.LBB37:
1069:Generated_Source\PSoC5/UART.c **** 
 932              		.loc 1 1069 0
 933 000c 41F6FF76 		movw	r6, #8191
 934 0010 A388     		ldrh	r3, [r4, #4]
 935              	.L99:
1060:Generated_Source\PSoC5/UART.c **** 
 936              		.loc 1 1060 0
 937 0012 6288     		ldrh	r2, [r4, #2]
 938 0014 4B4F     		ldr	r7, .L131
 939 0016 92B2     		uxth	r2, r2
1069:Generated_Source\PSoC5/UART.c **** 
 940              		.loc 1 1069 0
 941 0018 551E     		subs	r5, r2, #1
 942 001a 991A     		subs	r1, r3, r2
 943 001c ED1A     		subs	r5, r5, r3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 41


 944 001e 891B     		subs	r1, r1, r6
 945 0020 B5FA85F5 		clz	r5, r5
 946 0024 B1FA81F1 		clz	r1, r1
 947 0028 6D09     		lsrs	r5, r5, #5
 948 002a 4909     		lsrs	r1, r1, #5
 949 002c 9A42     		cmp	r2, r3
 950 002e 88BF     		it	hi
 951 0030 2946     		movhi	r1, r5
1068:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 952              		.loc 1 1068 0
 953 0032 1D46     		mov	r5, r3
1069:Generated_Source\PSoC5/UART.c **** 
 954              		.loc 1 1069 0
 955 0034 0029     		cmp	r1, #0
 956 0036 ECD1     		bne	.L99
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 957              		.loc 1 1071 0
 958 0038 9A42     		cmp	r2, r3
 959 003a 69D0     		beq	.L128
 960              	.L100:
1079:Generated_Source\PSoC5/UART.c ****             {
 961              		.loc 1 1079 0
 962 003c B3F5005F 		cmp	r3, #8192
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 963              		.loc 1 1084 0
 964 0040 4149     		ldr	r1, .L131+4
1079:Generated_Source\PSoC5/UART.c ****             {
 965              		.loc 1 1079 0
 966 0042 28BF     		it	cs
 967 0044 0025     		movcs	r5, #0
1098:Generated_Source\PSoC5/UART.c ****             {
 968              		.loc 1 1098 0
 969 0046 414A     		ldr	r2, .L131+8
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 970              		.loc 1 1084 0
 971 0048 4855     		strb	r0, [r1, r5]
1098:Generated_Source\PSoC5/UART.c ****             {
 972              		.loc 1 1098 0
 973 004a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 974 004c 3ABF     		itte	cc
 975 004e 0133     		addcc	r3, r3, #1
 976 0050 9BB2     		uxthcc	r3, r3
1079:Generated_Source\PSoC5/UART.c ****             {
 977              		.loc 1 1079 0
 978 0052 0123     		movcs	r3, #1
1098:Generated_Source\PSoC5/UART.c ****             {
 979              		.loc 1 1098 0
 980 0054 9607     		lsls	r6, r2, #30
1092:Generated_Source\PSoC5/UART.c **** 
 981              		.loc 1 1092 0
 982 0056 A380     		strh	r3, [r4, #4]	@ movhi
1098:Generated_Source\PSoC5/UART.c ****             {
 983              		.loc 1 1098 0
 984 0058 02D5     		bpl	.L103
1101:Generated_Source\PSoC5/UART.c ****             }
 985              		.loc 1 1101 0
 986 005a 3D4A     		ldr	r2, .L131+12
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 42


 987 005c 0121     		movs	r1, #1
 988 005e 1160     		str	r1, [r2]
 989              	.L103:
 990              	.LBE37:
 991              	.LBE36:
 992              	.LBB39:
 993              	.LBB40:
1069:Generated_Source\PSoC5/UART.c **** 
 994              		.loc 1 1069 0
 995 0060 41F6FF75 		movw	r5, #8191
 996              	.LVL38:
 997              	.L101:
1060:Generated_Source\PSoC5/UART.c **** 
 998              		.loc 1 1060 0
 999 0064 6288     		ldrh	r2, [r4, #2]
 1000 0066 374E     		ldr	r6, .L131
 1001 0068 92B2     		uxth	r2, r2
1069:Generated_Source\PSoC5/UART.c **** 
 1002              		.loc 1 1069 0
 1003 006a 501E     		subs	r0, r2, #1
 1004 006c 991A     		subs	r1, r3, r2
 1005 006e C01A     		subs	r0, r0, r3
 1006 0070 491B     		subs	r1, r1, r5
 1007 0072 B0FA80F0 		clz	r0, r0
 1008 0076 B1FA81F1 		clz	r1, r1
 1009 007a 4009     		lsrs	r0, r0, #5
 1010 007c 4909     		lsrs	r1, r1, #5
 1011 007e 9A42     		cmp	r2, r3
 1012 0080 88BF     		it	hi
 1013 0082 0146     		movhi	r1, r0
1068:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 1014              		.loc 1 1068 0
 1015 0084 1846     		mov	r0, r3
1069:Generated_Source\PSoC5/UART.c **** 
 1016              		.loc 1 1069 0
 1017 0086 0029     		cmp	r1, #0
 1018 0088 ECD1     		bne	.L101
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1019              		.loc 1 1071 0
 1020 008a 9A42     		cmp	r2, r3
 1021 008c 50D0     		beq	.L129
 1022              	.L104:
1079:Generated_Source\PSoC5/UART.c ****             {
 1023              		.loc 1 1079 0
 1024 008e B3F5005F 		cmp	r3, #8192
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1025              		.loc 1 1084 0
 1026 0092 2D49     		ldr	r1, .L131+4
1079:Generated_Source\PSoC5/UART.c ****             {
 1027              		.loc 1 1079 0
 1028 0094 28BF     		it	cs
 1029 0096 0020     		movcs	r0, #0
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1030              		.loc 1 1084 0
 1031 0098 4FF00D05 		mov	r5, #13
1098:Generated_Source\PSoC5/UART.c ****             {
 1032              		.loc 1 1098 0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 43


 1033 009c 2B4A     		ldr	r2, .L131+8
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1034              		.loc 1 1084 0
 1035 009e 0D54     		strb	r5, [r1, r0]
1098:Generated_Source\PSoC5/UART.c ****             {
 1036              		.loc 1 1098 0
 1037 00a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1038 00a2 3ABF     		itte	cc
 1039 00a4 0133     		addcc	r3, r3, #1
 1040 00a6 9BB2     		uxthcc	r3, r3
1079:Generated_Source\PSoC5/UART.c ****             {
 1041              		.loc 1 1079 0
 1042 00a8 0123     		movcs	r3, #1
1098:Generated_Source\PSoC5/UART.c ****             {
 1043              		.loc 1 1098 0
 1044 00aa 9107     		lsls	r1, r2, #30
1092:Generated_Source\PSoC5/UART.c **** 
 1045              		.loc 1 1092 0
 1046 00ac A380     		strh	r3, [r4, #4]	@ movhi
1098:Generated_Source\PSoC5/UART.c ****             {
 1047              		.loc 1 1098 0
 1048 00ae 02D5     		bpl	.L107
1101:Generated_Source\PSoC5/UART.c ****             }
 1049              		.loc 1 1101 0
 1050 00b0 274A     		ldr	r2, .L131+12
 1051 00b2 0121     		movs	r1, #1
 1052 00b4 1160     		str	r1, [r2]
 1053              	.L107:
 1054              	.LBE40:
 1055              	.LBE39:
 1056              	.LBB42:
 1057              	.LBB43:
1069:Generated_Source\PSoC5/UART.c **** 
 1058              		.loc 1 1069 0
 1059 00b6 41F6FF76 		movw	r6, #8191
 1060              	.L105:
1060:Generated_Source\PSoC5/UART.c **** 
 1061              		.loc 1 1060 0
 1062 00ba 6288     		ldrh	r2, [r4, #2]
1068:Generated_Source\PSoC5/UART.c ****                                 (uint16)(UART_TX_BUFFER_SIZE - 1u)) );
 1063              		.loc 1 1068 0
 1064 00bc 1D46     		mov	r5, r3
1060:Generated_Source\PSoC5/UART.c **** 
 1065              		.loc 1 1060 0
 1066 00be 92B2     		uxth	r2, r2
1069:Generated_Source\PSoC5/UART.c **** 
 1067              		.loc 1 1069 0
 1068 00c0 501E     		subs	r0, r2, #1
 1069 00c2 991A     		subs	r1, r3, r2
 1070 00c4 C01A     		subs	r0, r0, r3
 1071 00c6 891B     		subs	r1, r1, r6
 1072 00c8 B0FA80F0 		clz	r0, r0
 1073 00cc B1FA81F1 		clz	r1, r1
 1074 00d0 4009     		lsrs	r0, r0, #5
 1075 00d2 4909     		lsrs	r1, r1, #5
 1076 00d4 9A42     		cmp	r2, r3
 1077 00d6 88BF     		it	hi
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 44


 1078 00d8 0146     		movhi	r1, r0
 1079 00da 0029     		cmp	r1, #0
 1080 00dc EDD1     		bne	.L105
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1081              		.loc 1 1071 0
 1082 00de 9A42     		cmp	r2, r3
 1083 00e0 1ED0     		beq	.L130
 1084              	.L108:
1079:Generated_Source\PSoC5/UART.c ****             {
 1085              		.loc 1 1079 0
 1086 00e2 B3F5005F 		cmp	r3, #8192
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1087              		.loc 1 1084 0
 1088 00e6 1849     		ldr	r1, .L131+4
1079:Generated_Source\PSoC5/UART.c ****             {
 1089              		.loc 1 1079 0
 1090 00e8 28BF     		it	cs
 1091 00ea 0025     		movcs	r5, #0
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1092              		.loc 1 1084 0
 1093 00ec 4FF00A00 		mov	r0, #10
1098:Generated_Source\PSoC5/UART.c ****             {
 1094              		.loc 1 1098 0
 1095 00f0 164A     		ldr	r2, .L131+8
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1096              		.loc 1 1084 0
 1097 00f2 4855     		strb	r0, [r1, r5]
 1098 00f4 38BF     		it	cc
 1099 00f6 0133     		addcc	r3, r3, #1
1098:Generated_Source\PSoC5/UART.c ****             {
 1100              		.loc 1 1098 0
 1101 00f8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1102 00fa 34BF     		ite	cc
 1103 00fc 9BB2     		uxthcc	r3, r3
1079:Generated_Source\PSoC5/UART.c ****             {
 1104              		.loc 1 1079 0
 1105 00fe 0123     		movcs	r3, #1
1092:Generated_Source\PSoC5/UART.c **** 
 1106              		.loc 1 1092 0
 1107 0100 A380     		strh	r3, [r4, #4]	@ movhi
1098:Generated_Source\PSoC5/UART.c ****             {
 1108              		.loc 1 1098 0
 1109 0102 9307     		lsls	r3, r2, #30
 1110 0104 80D5     		bpl	.L96
 1111              	.LBE43:
 1112              	.LBE42:
 1113              		.loc 1 1239 0
 1114 0106 F0BC     		pop	{r4, r5, r6, r7}
 1115              		.cfi_remember_state
 1116              		.cfi_restore 4
 1117              		.cfi_restore 5
 1118              		.cfi_restore 6
 1119              		.cfi_restore 7
 1120              		.cfi_def_cfa_offset 0
 1121              	.LBB46:
 1122              	.LBB44:
1101:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 45


 1123              		.loc 1 1101 0
 1124 0108 114B     		ldr	r3, .L131+12
 1125 010a 0122     		movs	r2, #1
 1126 010c 1A60     		str	r2, [r3]
 1127              	.LBE44:
 1128              	.LBE46:
 1129              		.loc 1 1239 0
 1130 010e 7047     		bx	lr
 1131              	.LVL39:
 1132              	.L128:
 1133              		.cfi_restore_state
 1134              	.LBB47:
 1135              	.LBB38:
1072:Generated_Source\PSoC5/UART.c ****         {
 1136              		.loc 1 1072 0
 1137 0110 0E4A     		ldr	r2, .L131+8
 1138 0112 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1139              		.loc 1 1071 0
 1140 0114 5207     		lsls	r2, r2, #29
 1141 0116 91D4     		bmi	.L100
1075:Generated_Source\PSoC5/UART.c ****         }
 1142              		.loc 1 1075 0
 1143 0118 0E4A     		ldr	r2, .L131+16
 1144 011a BB88     		ldrh	r3, [r7, #4]
 1145 011c 1070     		strb	r0, [r2]
 1146 011e 9FE7     		b	.L103
 1147              	.LVL40:
 1148              	.L130:
 1149              	.LBE38:
 1150              	.LBE47:
 1151              	.LBB48:
 1152              	.LBB45:
1072:Generated_Source\PSoC5/UART.c ****         {
 1153              		.loc 1 1072 0
 1154 0120 0A4A     		ldr	r2, .L131+8
 1155 0122 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1156              		.loc 1 1071 0
 1157 0124 5207     		lsls	r2, r2, #29
 1158 0126 DCD4     		bmi	.L108
1075:Generated_Source\PSoC5/UART.c ****         }
 1159              		.loc 1 1075 0
 1160 0128 0A4B     		ldr	r3, .L131+16
 1161 012a 0A22     		movs	r2, #10
 1162 012c 1A70     		strb	r2, [r3]
 1163 012e 6BE7     		b	.L96
 1164              	.L129:
 1165              	.LBE45:
 1166              	.LBE48:
 1167              	.LBB49:
 1168              	.LBB41:
1072:Generated_Source\PSoC5/UART.c ****         {
 1169              		.loc 1 1072 0
 1170 0130 064A     		ldr	r2, .L131+8
 1171 0132 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 46


 1172              		.loc 1 1071 0
 1173 0134 5507     		lsls	r5, r2, #29
 1174 0136 AAD4     		bmi	.L104
1075:Generated_Source\PSoC5/UART.c ****         }
 1175              		.loc 1 1075 0
 1176 0138 064A     		ldr	r2, .L131+16
 1177 013a 0D21     		movs	r1, #13
 1178 013c B388     		ldrh	r3, [r6, #4]
 1179 013e 1170     		strb	r1, [r2]
 1180 0140 B9E7     		b	.L107
 1181              	.L132:
 1182 0142 00BF     		.align	2
 1183              	.L131:
 1184 0144 00000000 		.word	.LANCHOR0
 1185 0148 00000000 		.word	UART_txBuffer
 1186 014c 6B650040 		.word	1073767787
 1187 0150 00E200E0 		.word	-536813056
 1188 0154 4B650040 		.word	1073767755
 1189              	.LBE41:
 1190              	.LBE49:
 1191              		.cfi_endproc
 1192              	.LFE12:
 1193              		.size	UART_PutCRLF, .-UART_PutCRLF
 1194              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1195              		.align	2
 1196              		.global	UART_GetTxBufferSize
 1197              		.thumb
 1198              		.thumb_func
 1199              		.type	UART_GetTxBufferSize, %function
 1200              	UART_GetTxBufferSize:
 1201              	.LFB13:
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 47


1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 1202              		.loc 1 1275 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint16 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1207              		.loc 1 1281 0
 1208 0000 0D4B     		ldr	r3, .L138
 1209 0002 0121     		movs	r1, #1
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1210              		.loc 1 1283 0
 1211 0004 0D4A     		ldr	r2, .L138+4
1281:Generated_Source\PSoC5/UART.c **** 
 1212              		.loc 1 1281 0
 1213 0006 1960     		str	r1, [r3]
 1214              		.loc 1 1283 0
 1215 0008 5188     		ldrh	r1, [r2, #2]
 1216 000a 9388     		ldrh	r3, [r2, #4]
 1217 000c 89B2     		uxth	r1, r1
 1218 000e 9942     		cmp	r1, r3
 1219 0010 0CD0     		beq	.L136
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1220              		.loc 1 1287 0
 1221 0012 5188     		ldrh	r1, [r2, #2]
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1222              		.loc 1 1289 0
 1223 0014 5088     		ldrh	r0, [r2, #2]
1287:Generated_Source\PSoC5/UART.c ****         {
 1224              		.loc 1 1287 0
 1225 0016 89B2     		uxth	r1, r1
 1226 0018 8B42     		cmp	r3, r1
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1227              		.loc 1 1293 0
 1228 001a 98BF     		it	ls
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 48


 1229 001c 03F50053 		addls	r3, r3, #8192
 1230 0020 181A     		subs	r0, r3, r0
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1231              		.loc 1 1297 0
 1232 0022 074B     		ldr	r3, .L138+8
 1233 0024 0122     		movs	r2, #1
1293:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
 1234              		.loc 1 1293 0
 1235 0026 80B2     		uxth	r0, r0
 1236              	.LVL41:
 1237              		.loc 1 1297 0
 1238 0028 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 1239              		.loc 1 1321 0
 1240 002a 7047     		bx	lr
 1241              	.LVL42:
 1242              	.L136:
1297:Generated_Source\PSoC5/UART.c **** 
 1243              		.loc 1 1297 0
 1244 002c 044B     		ldr	r3, .L138+8
 1245 002e 0122     		movs	r2, #1
1285:Generated_Source\PSoC5/UART.c ****         }
 1246              		.loc 1 1285 0
 1247 0030 0020     		movs	r0, #0
 1248              	.LVL43:
1297:Generated_Source\PSoC5/UART.c **** 
 1249              		.loc 1 1297 0
 1250 0032 1A60     		str	r2, [r3]
 1251              		.loc 1 1321 0
 1252 0034 7047     		bx	lr
 1253              	.L139:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 49


 1254 0036 00BF     		.align	2
 1255              	.L138:
 1256 0038 80E100E0 		.word	-536813184
 1257 003c 00000000 		.word	.LANCHOR0
 1258 0040 00E100E0 		.word	-536813312
 1259              		.cfi_endproc
 1260              	.LFE13:
 1261              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1262              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1263              		.align	2
 1264              		.global	UART_ClearTxBuffer
 1265              		.thumb
 1266              		.thumb_func
 1267              		.type	UART_ClearTxBuffer, %function
 1268              	UART_ClearTxBuffer:
 1269              	.LFB14:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1270              		.loc 1 1355 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274 0000 10B5     		push	{r4, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 4, -8
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 50


 1277              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1278              		.loc 1 1358 0
 1279 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1280              	.LVL44:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1281              		.loc 1 1360 0
 1282 0006 0A4B     		ldr	r3, .L142
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1283              		.loc 1 1367 0
 1284 0008 0A4C     		ldr	r4, .L142+4
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1285              		.loc 1 1360 0
 1286 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1287 000c 42F00102 		orr	r2, r2, #1
 1288 0010 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1289              		.loc 1 1361 0
 1290 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1291 0014 02F0FE02 		and	r2, r2, #254
 1292 0018 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c **** 
 1293              		.loc 1 1362 0
 1294 001a FFF7FEFF 		bl	CyExitCriticalSection
 1295              	.LVL45:
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1296              		.loc 1 1369 0
 1297 001e 064A     		ldr	r2, .L142+8
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1298              		.loc 1 1373 0
 1299 0020 0648     		ldr	r0, .L142+12
1367:Generated_Source\PSoC5/UART.c **** 
 1300              		.loc 1 1367 0
 1301 0022 0123     		movs	r3, #1
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1302              		.loc 1 1369 0
 1303 0024 0021     		movs	r1, #0
1367:Generated_Source\PSoC5/UART.c **** 
 1304              		.loc 1 1367 0
 1305 0026 2360     		str	r3, [r4]
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1306              		.loc 1 1370 0
 1307 0028 9180     		strh	r1, [r2, #4]	@ movhi
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 51


 1308              		.loc 1 1369 0
 1309 002a 5180     		strh	r1, [r2, #2]	@ movhi
 1310              		.loc 1 1373 0
 1311 002c 0360     		str	r3, [r0]
 1312 002e 10BD     		pop	{r4, pc}
 1313              	.L143:
 1314              		.align	2
 1315              	.L142:
 1316 0030 9B650040 		.word	1073767835
 1317 0034 80E100E0 		.word	-536813184
 1318 0038 00000000 		.word	.LANCHOR0
 1319 003c 00E100E0 		.word	-536813312
 1320              		.cfi_endproc
 1321              	.LFE14:
 1322              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1323              		.section	.text.UART_SendBreak,"ax",%progbits
 1324              		.align	2
 1325              		.global	UART_SendBreak
 1326              		.thumb
 1327              		.thumb_func
 1328              		.type	UART_SendBreak, %function
 1329              	UART_SendBreak:
 1330              	.LFB15:
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 52


1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1331              		.loc 1 1441 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336              	.LVL46:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1337              		.loc 1 1444 0
 1338 0000 1249     		ldr	r1, .L170
 1339 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1340 0004 C3B1     		cbz	r3, .L168
1441:Generated_Source\PSoC5/UART.c **** 
 1341              		.loc 1 1441 0
 1342 0006 F0B4     		push	{r4, r5, r6, r7}
 1343              		.cfi_def_cfa_offset 16
 1344              		.cfi_offset 4, -16
 1345              		.cfi_offset 5, -12
 1346              		.cfi_offset 6, -8
 1347              		.cfi_offset 7, -4
 1348              	.LBB50:
1445:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 53


1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1349              		.loc 1 1490 0
 1350 0008 B8B9     		cbnz	r0, .L169
 1351              	.L147:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 54


1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1352              		.loc 1 1501 0
 1353 000a 114B     		ldr	r3, .L170+4
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1354              		.loc 1 1509 0
 1355 000c 114C     		ldr	r4, .L170+8
1501:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1356              		.loc 1 1501 0
 1357 000e 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1358              		.loc 1 1502 0
 1359 0010 6726     		movs	r6, #103
 1360              		.loc 1 1509 0
 1361 0012 0025     		movs	r5, #0
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1362              		.loc 1 1513 0
 1363 0014 104A     		ldr	r2, .L170+12
1501:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1364              		.loc 1 1501 0
 1365 0016 8F71     		strb	r7, [r1, #6]
1502:Generated_Source\PSoC5/UART.c ****                 #else
 1366              		.loc 1 1502 0
 1367 0018 1E70     		strb	r6, [r3]
1509:Generated_Source\PSoC5/UART.c **** 
 1368              		.loc 1 1509 0
 1369 001a 2570     		strb	r5, [r4]
 1370              	.L149:
 1371              		.loc 1 1513 0 discriminator 1
 1372 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1373              	.LVL47:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1374              		.loc 1 1515 0 discriminator 1
 1375 001e 9C07     		lsls	r4, r3, #30
 1376 0020 FCD4     		bmi	.L149
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1377              		.loc 1 1518 0
 1378 0022 00F0FD03 		and	r3, r0, #253
 1379              	.LVL48:
 1380 0026 012B     		cmp	r3, #1
 1381 0028 0BD0     		beq	.L150
 1382              	.L154:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 55


1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1383              		.loc 1 1528 0
 1384 002a 0138     		subs	r0, r0, #1
 1385              	.LVL49:
 1386 002c 0228     		cmp	r0, #2
 1387 002e 02D8     		bhi	.L144
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1388              		.loc 1 1534 0
 1389 0030 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 1390 0032 074B     		ldr	r3, .L170+4
 1391 0034 1A70     		strb	r2, [r3]
 1392              	.L144:
 1393              	.LBE50:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 1394              		.loc 1 1547 0
 1395 0036 F0BC     		pop	{r4, r5, r6, r7}
 1396              		.cfi_restore 7
 1397              		.cfi_restore 6
 1398              		.cfi_restore 5
 1399              		.cfi_restore 4
 1400              		.cfi_def_cfa_offset 0
 1401              	.L168:
 1402 0038 7047     		bx	lr
 1403              	.LVL50:
 1404              	.L169:
 1405              		.cfi_def_cfa_offset 16
 1406              		.cfi_offset 4, -16
 1407              		.cfi_offset 5, -12
 1408              		.cfi_offset 6, -8
 1409              		.cfi_offset 7, -4
 1410              	.LBB51:
1490:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
 1411              		.loc 1 1490 0 discriminator 1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 56


 1412 003a 0328     		cmp	r0, #3
 1413 003c E5D0     		beq	.L147
1518:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
 1414              		.loc 1 1518 0
 1415 003e 0128     		cmp	r0, #1
 1416 0040 F3D1     		bne	.L154
 1417              	.L150:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1418              		.loc 1 1523 0
 1419 0042 054A     		ldr	r2, .L170+12
 1420              	.L153:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1421              		.loc 1 1523 0 is_stmt 0 discriminator 1
 1422 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1423              	.LVL51:
1525:Generated_Source\PSoC5/UART.c ****             }
 1424              		.loc 1 1525 0 is_stmt 1 discriminator 1
 1425 0046 DB07     		lsls	r3, r3, #31
 1426              	.LVL52:
 1427 0048 FCD5     		bpl	.L153
 1428 004a EEE7     		b	.L154
 1429              	.L171:
 1430              		.align	2
 1431              	.L170:
 1432 004c 00000000 		.word	.LANCHOR0
 1433 0050 3A650040 		.word	1073767738
 1434 0054 4B650040 		.word	1073767755
 1435 0058 6B650040 		.word	1073767787
 1436              	.LBE51:
 1437              		.cfi_endproc
 1438              	.LFE15:
 1439              		.size	UART_SendBreak, .-UART_SendBreak
 1440              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1441              		.align	2
 1442              		.global	UART_SetTxAddressMode
 1443              		.thumb
 1444              		.thumb_func
 1445              		.type	UART_SetTxAddressMode, %function
 1446              	UART_SetTxAddressMode:
 1447              	.LFB16:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 57


1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1448              		.loc 1 1573 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              		@ link register save eliminated.
 1453              	.LVL53:
 1454 0000 7047     		bx	lr
 1455              		.cfi_endproc
 1456              	.LFE16:
 1457              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1458              		.global	UART_txBufferWrite
 1459              		.global	UART_txBufferRead
 1460              		.comm	UART_txBuffer,8192,4
 1461              		.global	UART_initVar
 1462 0002 00BF     		.bss
 1463              		.align	1
 1464              		.set	.LANCHOR0,. + 0
 1465              		.type	UART_initVar, %object
 1466              		.size	UART_initVar, 1
 1467              	UART_initVar:
 1468 0000 00       		.space	1
 1469 0001 00       		.space	1
 1470              		.type	UART_txBufferRead, %object
 1471              		.size	UART_txBufferRead, 2
 1472              	UART_txBufferRead:
 1473 0002 0000     		.space	2
 1474              		.type	UART_txBufferWrite, %object
 1475              		.size	UART_txBufferWrite, 2
 1476              	UART_txBufferWrite:
 1477 0004 0000     		.space	2
 1478              		.type	txPeriod.5065, %object
 1479              		.size	txPeriod.5065, 1
 1480              	txPeriod.5065:
 1481 0006 00       		.space	1
 1482              		.text
 1483              	.Letext0:
 1484              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1485              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1486              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1487              		.section	.debug_info,"",%progbits
 1488              	.Ldebug_info0:
 1489 0000 24060000 		.4byte	0x624
 1490 0004 0400     		.2byte	0x4
 1491 0006 00000000 		.4byte	.Ldebug_abbrev0
 1492 000a 04       		.byte	0x4
 1493 000b 01       		.uleb128 0x1
 1494 000c 14000000 		.4byte	.LASF57
 1495 0010 0C       		.byte	0xc
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 58


 1496 0011 53010000 		.4byte	.LASF58
 1497 0015 DB010000 		.4byte	.LASF59
 1498 0019 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 1499 001d 00000000 		.4byte	0
 1500 0021 00000000 		.4byte	.Ldebug_line0
 1501 0025 02       		.uleb128 0x2
 1502 0026 01       		.byte	0x1
 1503 0027 06       		.byte	0x6
 1504 0028 FF030000 		.4byte	.LASF0
 1505 002c 02       		.uleb128 0x2
 1506 002d 01       		.byte	0x1
 1507 002e 08       		.byte	0x8
 1508 002f 89020000 		.4byte	.LASF1
 1509 0033 02       		.uleb128 0x2
 1510 0034 02       		.byte	0x2
 1511 0035 05       		.byte	0x5
 1512 0036 E9000000 		.4byte	.LASF2
 1513 003a 02       		.uleb128 0x2
 1514 003b 02       		.byte	0x2
 1515 003c 07       		.byte	0x7
 1516 003d D6000000 		.4byte	.LASF3
 1517 0041 02       		.uleb128 0x2
 1518 0042 04       		.byte	0x4
 1519 0043 05       		.byte	0x5
 1520 0044 D8030000 		.4byte	.LASF4
 1521 0048 02       		.uleb128 0x2
 1522 0049 04       		.byte	0x4
 1523 004a 07       		.byte	0x7
 1524 004b 71010000 		.4byte	.LASF5
 1525 004f 02       		.uleb128 0x2
 1526 0050 08       		.byte	0x8
 1527 0051 05       		.byte	0x5
 1528 0052 00000000 		.4byte	.LASF6
 1529 0056 02       		.uleb128 0x2
 1530 0057 08       		.byte	0x8
 1531 0058 07       		.byte	0x7
 1532 0059 21010000 		.4byte	.LASF7
 1533 005d 03       		.uleb128 0x3
 1534 005e 04       		.byte	0x4
 1535 005f 05       		.byte	0x5
 1536 0060 696E7400 		.ascii	"int\000"
 1537 0064 02       		.uleb128 0x2
 1538 0065 04       		.byte	0x4
 1539 0066 07       		.byte	0x7
 1540 0067 97020000 		.4byte	.LASF8
 1541 006b 04       		.uleb128 0x4
 1542 006c 83010000 		.4byte	.LASF9
 1543 0070 02       		.byte	0x2
 1544 0071 9201     		.2byte	0x192
 1545 0073 2C000000 		.4byte	0x2c
 1546 0077 04       		.uleb128 0x4
 1547 0078 3F020000 		.4byte	.LASF10
 1548 007c 02       		.byte	0x2
 1549 007d 9301     		.2byte	0x193
 1550 007f 3A000000 		.4byte	0x3a
 1551 0083 04       		.uleb128 0x4
 1552 0084 55020000 		.4byte	.LASF11
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 59


 1553 0088 02       		.byte	0x2
 1554 0089 9401     		.2byte	0x194
 1555 008b 48000000 		.4byte	0x48
 1556 008f 02       		.uleb128 0x2
 1557 0090 04       		.byte	0x4
 1558 0091 04       		.byte	0x4
 1559 0092 1B010000 		.4byte	.LASF12
 1560 0096 02       		.uleb128 0x2
 1561 0097 08       		.byte	0x8
 1562 0098 04       		.byte	0x4
 1563 0099 CD010000 		.4byte	.LASF13
 1564 009d 04       		.uleb128 0x4
 1565 009e AB000000 		.4byte	.LASF14
 1566 00a2 02       		.byte	0x2
 1567 00a3 A301     		.2byte	0x1a3
 1568 00a5 A9000000 		.4byte	0xa9
 1569 00a9 02       		.uleb128 0x2
 1570 00aa 01       		.byte	0x1
 1571 00ab 08       		.byte	0x8
 1572 00ac 64030000 		.4byte	.LASF15
 1573 00b0 04       		.uleb128 0x4
 1574 00b1 4E010000 		.4byte	.LASF16
 1575 00b5 02       		.byte	0x2
 1576 00b6 3C02     		.2byte	0x23c
 1577 00b8 BC000000 		.4byte	0xbc
 1578 00bc 05       		.uleb128 0x5
 1579 00bd 6B000000 		.4byte	0x6b
 1580 00c1 05       		.uleb128 0x5
 1581 00c2 77000000 		.4byte	0x77
 1582 00c6 04       		.uleb128 0x4
 1583 00c7 0E000000 		.4byte	.LASF17
 1584 00cb 02       		.byte	0x2
 1585 00cc 3E02     		.2byte	0x23e
 1586 00ce D2000000 		.4byte	0xd2
 1587 00d2 05       		.uleb128 0x5
 1588 00d3 83000000 		.4byte	0x83
 1589 00d7 02       		.uleb128 0x2
 1590 00d8 08       		.byte	0x8
 1591 00d9 04       		.byte	0x4
 1592 00da 24030000 		.4byte	.LASF18
 1593 00de 02       		.uleb128 0x2
 1594 00df 04       		.byte	0x4
 1595 00e0 07       		.byte	0x7
 1596 00e1 50030000 		.4byte	.LASF19
 1597 00e5 06       		.uleb128 0x6
 1598 00e6 44010000 		.4byte	.LASF60
 1599 00ea 01       		.byte	0x1
 1600 00eb 6A       		.byte	0x6a
 1601 00ec 01       		.byte	0x1
 1602 00ed 07       		.uleb128 0x7
 1603 00ee F3030000 		.4byte	.LASF28
 1604 00f2 01       		.byte	0x1
 1605 00f3 B7       		.byte	0xb7
 1606 00f4 01       		.byte	0x1
 1607 00f5 05010000 		.4byte	0x105
 1608 00f9 08       		.uleb128 0x8
 1609 00fa AC010000 		.4byte	.LASF30
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 60


 1610 00fe 01       		.byte	0x1
 1611 00ff B9       		.byte	0xb9
 1612 0100 6B000000 		.4byte	0x6b
 1613 0104 00       		.byte	0
 1614 0105 09       		.uleb128 0x9
 1615 0106 89010000 		.4byte	.LASF20
 1616 010a 01       		.byte	0x1
 1617 010b 4C       		.byte	0x4c
 1618 010c 00000000 		.4byte	.LFB0
 1619 0110 78000000 		.4byte	.LFE0-.LFB0
 1620 0114 01       		.uleb128 0x1
 1621 0115 9C       		.byte	0x9c
 1622 0116 92010000 		.4byte	0x192
 1623 011a 0A       		.uleb128 0xa
 1624 011b E5000000 		.4byte	0xe5
 1625 011f 08000000 		.4byte	.LBB6
 1626 0123 00000000 		.4byte	.Ldebug_ranges0+0
 1627 0127 01       		.byte	0x1
 1628 0128 51       		.byte	0x51
 1629 0129 57010000 		.4byte	0x157
 1630 012d 0B       		.uleb128 0xb
 1631 012e 10000000 		.4byte	.LVL0
 1632 0132 E5050000 		.4byte	0x5e5
 1633 0136 41010000 		.4byte	0x141
 1634 013a 0C       		.uleb128 0xc
 1635 013b 01       		.uleb128 0x1
 1636 013c 50       		.byte	0x50
 1637 013d 02       		.uleb128 0x2
 1638 013e 74       		.byte	0x74
 1639 013f 00       		.sleb128 0
 1640 0140 00       		.byte	0
 1641 0141 0D       		.uleb128 0xd
 1642 0142 18000000 		.4byte	.LVL1
 1643 0146 F0050000 		.4byte	0x5f0
 1644 014a 0C       		.uleb128 0xc
 1645 014b 01       		.uleb128 0x1
 1646 014c 50       		.byte	0x50
 1647 014d 02       		.uleb128 0x2
 1648 014e 74       		.byte	0x74
 1649 014f 00       		.sleb128 0
 1650 0150 0C       		.uleb128 0xc
 1651 0151 01       		.uleb128 0x1
 1652 0152 51       		.byte	0x51
 1653 0153 01       		.uleb128 0x1
 1654 0154 37       		.byte	0x37
 1655 0155 00       		.byte	0
 1656 0156 00       		.byte	0
 1657 0157 0E       		.uleb128 0xe
 1658 0158 ED000000 		.4byte	0xed
 1659 015c 2E000000 		.4byte	.LBB10
 1660 0160 18000000 		.4byte	.Ldebug_ranges0+0x18
 1661 0164 01       		.byte	0x1
 1662 0165 55       		.byte	0x55
 1663 0166 0F       		.uleb128 0xf
 1664 0167 18000000 		.4byte	.Ldebug_ranges0+0x18
 1665 016b 10       		.uleb128 0x10
 1666 016c F9000000 		.4byte	0xf9
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 61


 1667 0170 00000000 		.4byte	.LLST0
 1668 0174 11       		.uleb128 0x11
 1669 0175 32000000 		.4byte	.LVL2
 1670 0179 FB050000 		.4byte	0x5fb
 1671 017d 11       		.uleb128 0x11
 1672 017e 4C000000 		.4byte	.LVL4
 1673 0182 06060000 		.4byte	0x606
 1674 0186 12       		.uleb128 0x12
 1675 0187 56000000 		.4byte	.LVL6
 1676 018b 11060000 		.4byte	0x611
 1677 018f 00       		.byte	0
 1678 0190 00       		.byte	0
 1679 0191 00       		.byte	0
 1680 0192 13       		.uleb128 0x13
 1681 0193 E5000000 		.4byte	0xe5
 1682 0197 00000000 		.4byte	.LFB1
 1683 019b 38000000 		.4byte	.LFE1-.LFB1
 1684 019f 01       		.uleb128 0x1
 1685 01a0 9C       		.byte	0x9c
 1686 01a1 CD010000 		.4byte	0x1cd
 1687 01a5 0B       		.uleb128 0xb
 1688 01a6 0A000000 		.4byte	.LVL7
 1689 01aa E5050000 		.4byte	0x5e5
 1690 01ae B8010000 		.4byte	0x1b8
 1691 01b2 0C       		.uleb128 0xc
 1692 01b3 01       		.uleb128 0x1
 1693 01b4 50       		.byte	0x50
 1694 01b5 01       		.uleb128 0x1
 1695 01b6 30       		.byte	0x30
 1696 01b7 00       		.byte	0
 1697 01b8 0D       		.uleb128 0xd
 1698 01b9 12000000 		.4byte	.LVL8
 1699 01bd F0050000 		.4byte	0x5f0
 1700 01c1 0C       		.uleb128 0xc
 1701 01c2 01       		.uleb128 0x1
 1702 01c3 50       		.byte	0x50
 1703 01c4 01       		.uleb128 0x1
 1704 01c5 30       		.byte	0x30
 1705 01c6 0C       		.uleb128 0xc
 1706 01c7 01       		.uleb128 0x1
 1707 01c8 51       		.byte	0x51
 1708 01c9 01       		.uleb128 0x1
 1709 01ca 37       		.byte	0x37
 1710 01cb 00       		.byte	0
 1711 01cc 00       		.byte	0
 1712 01cd 13       		.uleb128 0x13
 1713 01ce ED000000 		.4byte	0xed
 1714 01d2 00000000 		.4byte	.LFB2
 1715 01d6 38000000 		.4byte	.LFE2-.LFB2
 1716 01da 01       		.uleb128 0x1
 1717 01db 9C       		.byte	0x9c
 1718 01dc 05020000 		.4byte	0x205
 1719 01e0 10       		.uleb128 0x10
 1720 01e1 F9000000 		.4byte	0xf9
 1721 01e5 13000000 		.4byte	.LLST1
 1722 01e9 11       		.uleb128 0x11
 1723 01ea 06000000 		.4byte	.LVL9
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 62


 1724 01ee FB050000 		.4byte	0x5fb
 1725 01f2 11       		.uleb128 0x11
 1726 01f3 20000000 		.4byte	.LVL11
 1727 01f7 06060000 		.4byte	0x606
 1728 01fb 12       		.uleb128 0x12
 1729 01fc 2A000000 		.4byte	.LVL13
 1730 0200 11060000 		.4byte	0x611
 1731 0204 00       		.byte	0
 1732 0205 09       		.uleb128 0x9
 1733 0206 A6030000 		.4byte	.LASF21
 1734 020a 01       		.byte	0x1
 1735 020b F0       		.byte	0xf0
 1736 020c 00000000 		.4byte	.LFB3
 1737 0210 30000000 		.4byte	.LFE3-.LFB3
 1738 0214 01       		.uleb128 0x1
 1739 0215 9C       		.byte	0x9c
 1740 0216 45020000 		.4byte	0x245
 1741 021a 14       		.uleb128 0x14
 1742 021b AC010000 		.4byte	.LASF30
 1743 021f 01       		.byte	0x1
 1744 0220 F2       		.byte	0xf2
 1745 0221 6B000000 		.4byte	0x6b
 1746 0225 26000000 		.4byte	.LLST2
 1747 0229 11       		.uleb128 0x11
 1748 022a 06000000 		.4byte	.LVL14
 1749 022e FB050000 		.4byte	0x5fb
 1750 0232 11       		.uleb128 0x11
 1751 0233 0C000000 		.4byte	.LVL16
 1752 0237 1C060000 		.4byte	0x61c
 1753 023b 12       		.uleb128 0x12
 1754 023c 26000000 		.4byte	.LVL18
 1755 0240 11060000 		.4byte	0x611
 1756 0244 00       		.byte	0
 1757 0245 15       		.uleb128 0x15
 1758 0246 DD020000 		.4byte	.LASF26
 1759 024a 01       		.byte	0x1
 1760 024b 2701     		.2byte	0x127
 1761 024d 6B000000 		.4byte	0x6b
 1762 0251 00000000 		.4byte	.LFB4
 1763 0255 04000000 		.4byte	.LFE4-.LFB4
 1764 0259 01       		.uleb128 0x1
 1765 025a 9C       		.byte	0x9c
 1766 025b 16       		.uleb128 0x16
 1767 025c 0C030000 		.4byte	.LASF22
 1768 0260 01       		.byte	0x1
 1769 0261 8C03     		.2byte	0x38c
 1770 0263 00000000 		.4byte	.LFB6
 1771 0267 0C000000 		.4byte	.LFE6-.LFB6
 1772 026b 01       		.uleb128 0x1
 1773 026c 9C       		.byte	0x9c
 1774 026d 80020000 		.4byte	0x280
 1775 0271 17       		.uleb128 0x17
 1776 0272 D4010000 		.4byte	.LASF24
 1777 0276 01       		.byte	0x1
 1778 0277 8C03     		.2byte	0x38c
 1779 0279 6B000000 		.4byte	0x6b
 1780 027d 01       		.uleb128 0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 63


 1781 027e 50       		.byte	0x50
 1782 027f 00       		.byte	0
 1783 0280 16       		.uleb128 0x16
 1784 0281 69030000 		.4byte	.LASF23
 1785 0285 01       		.byte	0x1
 1786 0286 AE03     		.2byte	0x3ae
 1787 0288 00000000 		.4byte	.LFB7
 1788 028c 60000000 		.4byte	.LFE7-.LFB7
 1789 0290 01       		.uleb128 0x1
 1790 0291 9C       		.byte	0x9c
 1791 0292 A5020000 		.4byte	0x2a5
 1792 0296 17       		.uleb128 0x17
 1793 0297 59030000 		.4byte	.LASF25
 1794 029b 01       		.byte	0x1
 1795 029c AE03     		.2byte	0x3ae
 1796 029e 6B000000 		.4byte	0x6b
 1797 02a2 01       		.uleb128 0x1
 1798 02a3 50       		.byte	0x50
 1799 02a4 00       		.byte	0
 1800 02a5 15       		.uleb128 0x15
 1801 02a6 A4020000 		.4byte	.LASF27
 1802 02aa 01       		.byte	0x1
 1803 02ab EB03     		.2byte	0x3eb
 1804 02ad 6B000000 		.4byte	0x6b
 1805 02b1 00000000 		.4byte	.LFB8
 1806 02b5 0C000000 		.4byte	.LFE8-.LFB8
 1807 02b9 01       		.uleb128 0x1
 1808 02ba 9C       		.byte	0x9c
 1809 02bb 18       		.uleb128 0x18
 1810 02bc 30030000 		.4byte	.LASF29
 1811 02c0 01       		.byte	0x1
 1812 02c1 1104     		.2byte	0x411
 1813 02c3 01       		.byte	0x1
 1814 02c4 ED020000 		.4byte	0x2ed
 1815 02c8 19       		.uleb128 0x19
 1816 02c9 59030000 		.4byte	.LASF25
 1817 02cd 01       		.byte	0x1
 1818 02ce 1104     		.2byte	0x411
 1819 02d0 6B000000 		.4byte	0x6b
 1820 02d4 1A       		.uleb128 0x1a
 1821 02d5 82030000 		.4byte	.LASF31
 1822 02d9 01       		.byte	0x1
 1823 02da 1804     		.2byte	0x418
 1824 02dc 77000000 		.4byte	0x77
 1825 02e0 1A       		.uleb128 0x1a
 1826 02e1 BD010000 		.4byte	.LASF32
 1827 02e5 01       		.byte	0x1
 1828 02e6 1904     		.2byte	0x419
 1829 02e8 77000000 		.4byte	0x77
 1830 02ec 00       		.byte	0
 1831 02ed 13       		.uleb128 0x13
 1832 02ee BB020000 		.4byte	0x2bb
 1833 02f2 00000000 		.4byte	.LFB9
 1834 02f6 80000000 		.4byte	.LFE9-.LFB9
 1835 02fa 01       		.uleb128 0x1
 1836 02fb 9C       		.byte	0x9c
 1837 02fc 14030000 		.4byte	0x314
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 64


 1838 0300 1B       		.uleb128 0x1b
 1839 0301 C8020000 		.4byte	0x2c8
 1840 0305 01       		.uleb128 0x1
 1841 0306 50       		.byte	0x50
 1842 0307 1C       		.uleb128 0x1c
 1843 0308 D4020000 		.4byte	0x2d4
 1844 030c 1D       		.uleb128 0x1d
 1845 030d E0020000 		.4byte	0x2e0
 1846 0311 01       		.uleb128 0x1
 1847 0312 53       		.byte	0x53
 1848 0313 00       		.byte	0
 1849 0314 16       		.uleb128 0x16
 1850 0315 0B040000 		.4byte	.LASF33
 1851 0319 01       		.byte	0x1
 1852 031a 7904     		.2byte	0x479
 1853 031c 00000000 		.4byte	.LFB10
 1854 0320 B0000000 		.4byte	.LFE10-.LFB10
 1855 0324 01       		.uleb128 0x1
 1856 0325 9C       		.byte	0x9c
 1857 0326 73030000 		.4byte	0x373
 1858 032a 1E       		.uleb128 0x1e
 1859 032b 00010000 		.4byte	.LASF34
 1860 032f 01       		.byte	0x1
 1861 0330 7904     		.2byte	0x479
 1862 0332 73030000 		.4byte	0x373
 1863 0336 39000000 		.4byte	.LLST3
 1864 033a 1F       		.uleb128 0x1f
 1865 033b 03030000 		.4byte	.LASF35
 1866 033f 01       		.byte	0x1
 1867 0340 7B04     		.2byte	0x47b
 1868 0342 77000000 		.4byte	0x77
 1869 0346 70000000 		.4byte	.LLST4
 1870 034a 20       		.uleb128 0x20
 1871 034b BB020000 		.4byte	0x2bb
 1872 034f 14000000 		.4byte	.LBB16
 1873 0353 30000000 		.4byte	.Ldebug_ranges0+0x30
 1874 0357 01       		.byte	0x1
 1875 0358 8304     		.2byte	0x483
 1876 035a 21       		.uleb128 0x21
 1877 035b C8020000 		.4byte	0x2c8
 1878 035f 0F       		.uleb128 0xf
 1879 0360 30000000 		.4byte	.Ldebug_ranges0+0x30
 1880 0364 1C       		.uleb128 0x1c
 1881 0365 D4020000 		.4byte	0x2d4
 1882 0369 1D       		.uleb128 0x1d
 1883 036a E0020000 		.4byte	0x2e0
 1884 036e 01       		.uleb128 0x1
 1885 036f 52       		.byte	0x52
 1886 0370 00       		.byte	0
 1887 0371 00       		.byte	0
 1888 0372 00       		.byte	0
 1889 0373 22       		.uleb128 0x22
 1890 0374 04       		.byte	0x4
 1891 0375 79030000 		.4byte	0x379
 1892 0379 23       		.uleb128 0x23
 1893 037a 9D000000 		.4byte	0x9d
 1894 037e 16       		.uleb128 0x16
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 65


 1895 037f 94010000 		.4byte	.LASF36
 1896 0383 01       		.byte	0x1
 1897 0384 A704     		.2byte	0x4a7
 1898 0386 00000000 		.4byte	.LFB11
 1899 038a B0000000 		.4byte	.LFE11-.LFB11
 1900 038e 01       		.uleb128 0x1
 1901 038f 9C       		.byte	0x9c
 1902 0390 F1030000 		.4byte	0x3f1
 1903 0394 1E       		.uleb128 0x1e
 1904 0395 00010000 		.4byte	.LASF34
 1905 0399 01       		.byte	0x1
 1906 039a A704     		.2byte	0x4a7
 1907 039c F1030000 		.4byte	0x3f1
 1908 03a0 A5000000 		.4byte	.LLST5
 1909 03a4 1E       		.uleb128 0x1e
 1910 03a5 A2010000 		.4byte	.LASF37
 1911 03a9 01       		.byte	0x1
 1912 03aa A704     		.2byte	0x4a7
 1913 03ac 77000000 		.4byte	0x77
 1914 03b0 C6000000 		.4byte	.LLST6
 1915 03b4 1F       		.uleb128 0x1f
 1916 03b5 03030000 		.4byte	.LASF35
 1917 03b9 01       		.byte	0x1
 1918 03ba AA04     		.2byte	0x4aa
 1919 03bc 77000000 		.4byte	0x77
 1920 03c0 E7000000 		.4byte	.LLST7
 1921 03c4 20       		.uleb128 0x20
 1922 03c5 BB020000 		.4byte	0x2bb
 1923 03c9 10000000 		.4byte	.LBB24
 1924 03cd 50000000 		.4byte	.Ldebug_ranges0+0x50
 1925 03d1 01       		.byte	0x1
 1926 03d2 B104     		.2byte	0x4b1
 1927 03d4 24       		.uleb128 0x24
 1928 03d5 C8020000 		.4byte	0x2c8
 1929 03d9 21010000 		.4byte	.LLST8
 1930 03dd 0F       		.uleb128 0xf
 1931 03de 50000000 		.4byte	.Ldebug_ranges0+0x50
 1932 03e2 1C       		.uleb128 0x1c
 1933 03e3 D4020000 		.4byte	0x2d4
 1934 03e7 1D       		.uleb128 0x1d
 1935 03e8 E0020000 		.4byte	0x2e0
 1936 03ec 01       		.uleb128 0x1
 1937 03ed 52       		.byte	0x52
 1938 03ee 00       		.byte	0
 1939 03ef 00       		.byte	0
 1940 03f0 00       		.byte	0
 1941 03f1 22       		.uleb128 0x22
 1942 03f2 04       		.byte	0x4
 1943 03f3 F7030000 		.4byte	0x3f7
 1944 03f7 23       		.uleb128 0x23
 1945 03f8 6B000000 		.4byte	0x6b
 1946 03fc 16       		.uleb128 0x16
 1947 03fd F6020000 		.4byte	.LASF38
 1948 0401 01       		.byte	0x1
 1949 0402 CE04     		.2byte	0x4ce
 1950 0404 00000000 		.4byte	.LFB12
 1951 0408 58010000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 66


 1952 040c 01       		.uleb128 0x1
 1953 040d 9C       		.byte	0x9c
 1954 040e A3040000 		.4byte	0x4a3
 1955 0412 1E       		.uleb128 0x1e
 1956 0413 59030000 		.4byte	.LASF25
 1957 0417 01       		.byte	0x1
 1958 0418 CE04     		.2byte	0x4ce
 1959 041a 6B000000 		.4byte	0x6b
 1960 041e 3F010000 		.4byte	.LLST9
 1961 0422 25       		.uleb128 0x25
 1962 0423 BB020000 		.4byte	0x2bb
 1963 0427 0C000000 		.4byte	.LBB36
 1964 042b 70000000 		.4byte	.Ldebug_ranges0+0x70
 1965 042f 01       		.byte	0x1
 1966 0430 D304     		.2byte	0x4d3
 1967 0432 4E040000 		.4byte	0x44e
 1968 0436 21       		.uleb128 0x21
 1969 0437 C8020000 		.4byte	0x2c8
 1970 043b 0F       		.uleb128 0xf
 1971 043c 70000000 		.4byte	.Ldebug_ranges0+0x70
 1972 0440 1C       		.uleb128 0x1c
 1973 0441 D4020000 		.4byte	0x2d4
 1974 0445 1D       		.uleb128 0x1d
 1975 0446 E0020000 		.4byte	0x2e0
 1976 044a 01       		.uleb128 0x1
 1977 044b 52       		.byte	0x52
 1978 044c 00       		.byte	0
 1979 044d 00       		.byte	0
 1980 044e 25       		.uleb128 0x25
 1981 044f BB020000 		.4byte	0x2bb
 1982 0453 60000000 		.4byte	.LBB39
 1983 0457 88000000 		.4byte	.Ldebug_ranges0+0x88
 1984 045b 01       		.byte	0x1
 1985 045c D404     		.2byte	0x4d4
 1986 045e 7A040000 		.4byte	0x47a
 1987 0462 21       		.uleb128 0x21
 1988 0463 C8020000 		.4byte	0x2c8
 1989 0467 0F       		.uleb128 0xf
 1990 0468 88000000 		.4byte	.Ldebug_ranges0+0x88
 1991 046c 1C       		.uleb128 0x1c
 1992 046d D4020000 		.4byte	0x2d4
 1993 0471 1D       		.uleb128 0x1d
 1994 0472 E0020000 		.4byte	0x2e0
 1995 0476 01       		.uleb128 0x1
 1996 0477 52       		.byte	0x52
 1997 0478 00       		.byte	0
 1998 0479 00       		.byte	0
 1999 047a 20       		.uleb128 0x20
 2000 047b BB020000 		.4byte	0x2bb
 2001 047f B6000000 		.4byte	.LBB42
 2002 0483 A0000000 		.4byte	.Ldebug_ranges0+0xa0
 2003 0487 01       		.byte	0x1
 2004 0488 D504     		.2byte	0x4d5
 2005 048a 21       		.uleb128 0x21
 2006 048b C8020000 		.4byte	0x2c8
 2007 048f 0F       		.uleb128 0xf
 2008 0490 A0000000 		.4byte	.Ldebug_ranges0+0xa0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 67


 2009 0494 1C       		.uleb128 0x1c
 2010 0495 D4020000 		.4byte	0x2d4
 2011 0499 1D       		.uleb128 0x1d
 2012 049a E0020000 		.4byte	0x2e0
 2013 049e 01       		.uleb128 0x1
 2014 049f 52       		.byte	0x52
 2015 04a0 00       		.byte	0
 2016 04a1 00       		.byte	0
 2017 04a2 00       		.byte	0
 2018 04a3 26       		.uleb128 0x26
 2019 04a4 C3030000 		.4byte	.LASF61
 2020 04a8 01       		.byte	0x1
 2021 04a9 F904     		.2byte	0x4f9
 2022 04ab 77000000 		.4byte	0x77
 2023 04af 00000000 		.4byte	.LFB13
 2024 04b3 44000000 		.4byte	.LFE13-.LFB13
 2025 04b7 01       		.uleb128 0x1
 2026 04b8 9C       		.byte	0x9c
 2027 04b9 CE040000 		.4byte	0x4ce
 2028 04bd 1F       		.uleb128 0x1f
 2029 04be 1A040000 		.4byte	.LASF39
 2030 04c2 01       		.byte	0x1
 2031 04c3 FC04     		.2byte	0x4fc
 2032 04c5 77000000 		.4byte	0x77
 2033 04c9 92010000 		.4byte	.LLST10
 2034 04cd 00       		.byte	0
 2035 04ce 16       		.uleb128 0x16
 2036 04cf 93030000 		.4byte	.LASF40
 2037 04d3 01       		.byte	0x1
 2038 04d4 4A05     		.2byte	0x54a
 2039 04d6 00000000 		.4byte	.LFB14
 2040 04da 40000000 		.4byte	.LFE14-.LFB14
 2041 04de 01       		.uleb128 0x1
 2042 04df 9C       		.byte	0x9c
 2043 04e0 07050000 		.4byte	0x507
 2044 04e4 1F       		.uleb128 0x1f
 2045 04e5 AC010000 		.4byte	.LASF30
 2046 04e9 01       		.byte	0x1
 2047 04ea 4C05     		.2byte	0x54c
 2048 04ec 6B000000 		.4byte	0x6b
 2049 04f0 B0010000 		.4byte	.LLST11
 2050 04f4 11       		.uleb128 0x11
 2051 04f5 06000000 		.4byte	.LVL44
 2052 04f9 FB050000 		.4byte	0x5fb
 2053 04fd 11       		.uleb128 0x11
 2054 04fe 1E000000 		.4byte	.LVL45
 2055 0502 11060000 		.4byte	0x611
 2056 0506 00       		.byte	0
 2057 0507 16       		.uleb128 0x16
 2058 0508 46020000 		.4byte	.LASF41
 2059 050c 01       		.byte	0x1
 2060 050d A005     		.2byte	0x5a0
 2061 050f 00000000 		.4byte	.LFB15
 2062 0513 5C000000 		.4byte	.LFE15-.LFB15
 2063 0517 01       		.uleb128 0x1
 2064 0518 9C       		.byte	0x9c
 2065 0519 56050000 		.4byte	0x556
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 68


 2066 051d 1E       		.uleb128 0x1e
 2067 051e 7A030000 		.4byte	.LASF42
 2068 0522 01       		.byte	0x1
 2069 0523 A005     		.2byte	0x5a0
 2070 0525 6B000000 		.4byte	0x6b
 2071 0529 C3010000 		.4byte	.LLST12
 2072 052d 0F       		.uleb128 0xf
 2073 052e C0000000 		.4byte	.Ldebug_ranges0+0xc0
 2074 0532 1F       		.uleb128 0x1f
 2075 0533 C0000000 		.4byte	.LASF43
 2076 0537 01       		.byte	0x1
 2077 0538 A805     		.2byte	0x5a8
 2078 053a 6B000000 		.4byte	0x6b
 2079 053e EF010000 		.4byte	.LLST13
 2080 0542 27       		.uleb128 0x27
 2081 0543 A2000000 		.4byte	.LASF44
 2082 0547 01       		.byte	0x1
 2083 0548 D005     		.2byte	0x5d0
 2084 054a 6B000000 		.4byte	0x6b
 2085 054e 05       		.uleb128 0x5
 2086 054f 03       		.byte	0x3
 2087 0550 06000000 		.4byte	txPeriod.5065
 2088 0554 00       		.byte	0
 2089 0555 00       		.byte	0
 2090 0556 18       		.uleb128 0x18
 2091 0557 5C020000 		.4byte	.LASF45
 2092 055b 01       		.byte	0x1
 2093 055c 2406     		.2byte	0x624
 2094 055e 01       		.byte	0x1
 2095 055f 70050000 		.4byte	0x570
 2096 0563 19       		.uleb128 0x19
 2097 0564 38010000 		.4byte	.LASF46
 2098 0568 01       		.byte	0x1
 2099 0569 2406     		.2byte	0x624
 2100 056b 6B000000 		.4byte	0x6b
 2101 056f 00       		.byte	0
 2102 0570 13       		.uleb128 0x13
 2103 0571 56050000 		.4byte	0x556
 2104 0575 00000000 		.4byte	.LFB16
 2105 0579 02000000 		.4byte	.LFE16-.LFB16
 2106 057d 01       		.uleb128 0x1
 2107 057e 9C       		.byte	0x9c
 2108 057f 8B050000 		.4byte	0x58b
 2109 0583 1B       		.uleb128 0x1b
 2110 0584 63050000 		.4byte	0x563
 2111 0588 01       		.uleb128 0x1
 2112 0589 50       		.byte	0x50
 2113 058a 00       		.byte	0
 2114 058b 28       		.uleb128 0x28
 2115 058c F3000000 		.4byte	.LASF47
 2116 0590 01       		.byte	0x1
 2117 0591 1B       		.byte	0x1b
 2118 0592 6B000000 		.4byte	0x6b
 2119 0596 05       		.uleb128 0x5
 2120 0597 03       		.byte	0x3
 2121 0598 00000000 		.4byte	UART_initVar
 2122 059c 29       		.uleb128 0x29
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 69


 2123 059d BC000000 		.4byte	0xbc
 2124 05a1 AD050000 		.4byte	0x5ad
 2125 05a5 2A       		.uleb128 0x2a
 2126 05a6 DE000000 		.4byte	0xde
 2127 05aa FF1F     		.2byte	0x1fff
 2128 05ac 00       		.byte	0
 2129 05ad 28       		.uleb128 0x28
 2130 05ae C8000000 		.4byte	.LASF48
 2131 05b2 01       		.byte	0x1
 2132 05b3 1E       		.byte	0x1e
 2133 05b4 BE050000 		.4byte	0x5be
 2134 05b8 05       		.uleb128 0x5
 2135 05b9 03       		.byte	0x3
 2136 05ba 00000000 		.4byte	UART_txBuffer
 2137 05be 05       		.uleb128 0x5
 2138 05bf 9C050000 		.4byte	0x59c
 2139 05c3 28       		.uleb128 0x28
 2140 05c4 E1030000 		.4byte	.LASF49
 2141 05c8 01       		.byte	0x1
 2142 05c9 1F       		.byte	0x1f
 2143 05ca C1000000 		.4byte	0xc1
 2144 05ce 05       		.uleb128 0x5
 2145 05cf 03       		.byte	0x3
 2146 05d0 00000000 		.4byte	UART_txBufferRead
 2147 05d4 28       		.uleb128 0x28
 2148 05d5 B0030000 		.4byte	.LASF50
 2149 05d9 01       		.byte	0x1
 2150 05da 20       		.byte	0x20
 2151 05db 77000000 		.4byte	0x77
 2152 05df 05       		.uleb128 0x5
 2153 05e0 03       		.byte	0x3
 2154 05e1 00000000 		.4byte	UART_txBufferWrite
 2155 05e5 2B       		.uleb128 0x2b
 2156 05e6 B1000000 		.4byte	.LASF51
 2157 05ea B1000000 		.4byte	.LASF51
 2158 05ee 03       		.byte	0x3
 2159 05ef 88       		.byte	0x88
 2160 05f0 2B       		.uleb128 0x2b
 2161 05f1 CC020000 		.4byte	.LASF52
 2162 05f5 CC020000 		.4byte	.LASF52
 2163 05f9 03       		.byte	0x3
 2164 05fa 8B       		.byte	0x8b
 2165 05fb 2B       		.uleb128 0x2b
 2166 05fc 72020000 		.4byte	.LASF53
 2167 0600 72020000 		.4byte	.LASF53
 2168 0604 03       		.byte	0x3
 2169 0605 7D       		.byte	0x7d
 2170 0606 2B       		.uleb128 0x2b
 2171 0607 07010000 		.4byte	.LASF54
 2172 060b 07010000 		.4byte	.LASF54
 2173 060f 04       		.byte	0x4
 2174 0610 27       		.byte	0x27
 2175 0611 2B       		.uleb128 0x2b
 2176 0612 B6020000 		.4byte	.LASF55
 2177 0616 B6020000 		.4byte	.LASF55
 2178 061a 03       		.byte	0x3
 2179 061b 7E       		.byte	0x7e
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 70


 2180 061c 2B       		.uleb128 0x2b
 2181 061d 3D030000 		.4byte	.LASF56
 2182 0621 3D030000 		.4byte	.LASF56
 2183 0625 04       		.byte	0x4
 2184 0626 28       		.byte	0x28
 2185 0627 00       		.byte	0
 2186              		.section	.debug_abbrev,"",%progbits
 2187              	.Ldebug_abbrev0:
 2188 0000 01       		.uleb128 0x1
 2189 0001 11       		.uleb128 0x11
 2190 0002 01       		.byte	0x1
 2191 0003 25       		.uleb128 0x25
 2192 0004 0E       		.uleb128 0xe
 2193 0005 13       		.uleb128 0x13
 2194 0006 0B       		.uleb128 0xb
 2195 0007 03       		.uleb128 0x3
 2196 0008 0E       		.uleb128 0xe
 2197 0009 1B       		.uleb128 0x1b
 2198 000a 0E       		.uleb128 0xe
 2199 000b 55       		.uleb128 0x55
 2200 000c 17       		.uleb128 0x17
 2201 000d 11       		.uleb128 0x11
 2202 000e 01       		.uleb128 0x1
 2203 000f 10       		.uleb128 0x10
 2204 0010 17       		.uleb128 0x17
 2205 0011 00       		.byte	0
 2206 0012 00       		.byte	0
 2207 0013 02       		.uleb128 0x2
 2208 0014 24       		.uleb128 0x24
 2209 0015 00       		.byte	0
 2210 0016 0B       		.uleb128 0xb
 2211 0017 0B       		.uleb128 0xb
 2212 0018 3E       		.uleb128 0x3e
 2213 0019 0B       		.uleb128 0xb
 2214 001a 03       		.uleb128 0x3
 2215 001b 0E       		.uleb128 0xe
 2216 001c 00       		.byte	0
 2217 001d 00       		.byte	0
 2218 001e 03       		.uleb128 0x3
 2219 001f 24       		.uleb128 0x24
 2220 0020 00       		.byte	0
 2221 0021 0B       		.uleb128 0xb
 2222 0022 0B       		.uleb128 0xb
 2223 0023 3E       		.uleb128 0x3e
 2224 0024 0B       		.uleb128 0xb
 2225 0025 03       		.uleb128 0x3
 2226 0026 08       		.uleb128 0x8
 2227 0027 00       		.byte	0
 2228 0028 00       		.byte	0
 2229 0029 04       		.uleb128 0x4
 2230 002a 16       		.uleb128 0x16
 2231 002b 00       		.byte	0
 2232 002c 03       		.uleb128 0x3
 2233 002d 0E       		.uleb128 0xe
 2234 002e 3A       		.uleb128 0x3a
 2235 002f 0B       		.uleb128 0xb
 2236 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 71


 2237 0031 05       		.uleb128 0x5
 2238 0032 49       		.uleb128 0x49
 2239 0033 13       		.uleb128 0x13
 2240 0034 00       		.byte	0
 2241 0035 00       		.byte	0
 2242 0036 05       		.uleb128 0x5
 2243 0037 35       		.uleb128 0x35
 2244 0038 00       		.byte	0
 2245 0039 49       		.uleb128 0x49
 2246 003a 13       		.uleb128 0x13
 2247 003b 00       		.byte	0
 2248 003c 00       		.byte	0
 2249 003d 06       		.uleb128 0x6
 2250 003e 2E       		.uleb128 0x2e
 2251 003f 00       		.byte	0
 2252 0040 3F       		.uleb128 0x3f
 2253 0041 19       		.uleb128 0x19
 2254 0042 03       		.uleb128 0x3
 2255 0043 0E       		.uleb128 0xe
 2256 0044 3A       		.uleb128 0x3a
 2257 0045 0B       		.uleb128 0xb
 2258 0046 3B       		.uleb128 0x3b
 2259 0047 0B       		.uleb128 0xb
 2260 0048 27       		.uleb128 0x27
 2261 0049 19       		.uleb128 0x19
 2262 004a 20       		.uleb128 0x20
 2263 004b 0B       		.uleb128 0xb
 2264 004c 00       		.byte	0
 2265 004d 00       		.byte	0
 2266 004e 07       		.uleb128 0x7
 2267 004f 2E       		.uleb128 0x2e
 2268 0050 01       		.byte	0x1
 2269 0051 3F       		.uleb128 0x3f
 2270 0052 19       		.uleb128 0x19
 2271 0053 03       		.uleb128 0x3
 2272 0054 0E       		.uleb128 0xe
 2273 0055 3A       		.uleb128 0x3a
 2274 0056 0B       		.uleb128 0xb
 2275 0057 3B       		.uleb128 0x3b
 2276 0058 0B       		.uleb128 0xb
 2277 0059 27       		.uleb128 0x27
 2278 005a 19       		.uleb128 0x19
 2279 005b 20       		.uleb128 0x20
 2280 005c 0B       		.uleb128 0xb
 2281 005d 01       		.uleb128 0x1
 2282 005e 13       		.uleb128 0x13
 2283 005f 00       		.byte	0
 2284 0060 00       		.byte	0
 2285 0061 08       		.uleb128 0x8
 2286 0062 34       		.uleb128 0x34
 2287 0063 00       		.byte	0
 2288 0064 03       		.uleb128 0x3
 2289 0065 0E       		.uleb128 0xe
 2290 0066 3A       		.uleb128 0x3a
 2291 0067 0B       		.uleb128 0xb
 2292 0068 3B       		.uleb128 0x3b
 2293 0069 0B       		.uleb128 0xb
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 72


 2294 006a 49       		.uleb128 0x49
 2295 006b 13       		.uleb128 0x13
 2296 006c 00       		.byte	0
 2297 006d 00       		.byte	0
 2298 006e 09       		.uleb128 0x9
 2299 006f 2E       		.uleb128 0x2e
 2300 0070 01       		.byte	0x1
 2301 0071 3F       		.uleb128 0x3f
 2302 0072 19       		.uleb128 0x19
 2303 0073 03       		.uleb128 0x3
 2304 0074 0E       		.uleb128 0xe
 2305 0075 3A       		.uleb128 0x3a
 2306 0076 0B       		.uleb128 0xb
 2307 0077 3B       		.uleb128 0x3b
 2308 0078 0B       		.uleb128 0xb
 2309 0079 27       		.uleb128 0x27
 2310 007a 19       		.uleb128 0x19
 2311 007b 11       		.uleb128 0x11
 2312 007c 01       		.uleb128 0x1
 2313 007d 12       		.uleb128 0x12
 2314 007e 06       		.uleb128 0x6
 2315 007f 40       		.uleb128 0x40
 2316 0080 18       		.uleb128 0x18
 2317 0081 9742     		.uleb128 0x2117
 2318 0083 19       		.uleb128 0x19
 2319 0084 01       		.uleb128 0x1
 2320 0085 13       		.uleb128 0x13
 2321 0086 00       		.byte	0
 2322 0087 00       		.byte	0
 2323 0088 0A       		.uleb128 0xa
 2324 0089 1D       		.uleb128 0x1d
 2325 008a 01       		.byte	0x1
 2326 008b 31       		.uleb128 0x31
 2327 008c 13       		.uleb128 0x13
 2328 008d 52       		.uleb128 0x52
 2329 008e 01       		.uleb128 0x1
 2330 008f 55       		.uleb128 0x55
 2331 0090 17       		.uleb128 0x17
 2332 0091 58       		.uleb128 0x58
 2333 0092 0B       		.uleb128 0xb
 2334 0093 59       		.uleb128 0x59
 2335 0094 0B       		.uleb128 0xb
 2336 0095 01       		.uleb128 0x1
 2337 0096 13       		.uleb128 0x13
 2338 0097 00       		.byte	0
 2339 0098 00       		.byte	0
 2340 0099 0B       		.uleb128 0xb
 2341 009a 898201   		.uleb128 0x4109
 2342 009d 01       		.byte	0x1
 2343 009e 11       		.uleb128 0x11
 2344 009f 01       		.uleb128 0x1
 2345 00a0 31       		.uleb128 0x31
 2346 00a1 13       		.uleb128 0x13
 2347 00a2 01       		.uleb128 0x1
 2348 00a3 13       		.uleb128 0x13
 2349 00a4 00       		.byte	0
 2350 00a5 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 73


 2351 00a6 0C       		.uleb128 0xc
 2352 00a7 8A8201   		.uleb128 0x410a
 2353 00aa 00       		.byte	0
 2354 00ab 02       		.uleb128 0x2
 2355 00ac 18       		.uleb128 0x18
 2356 00ad 9142     		.uleb128 0x2111
 2357 00af 18       		.uleb128 0x18
 2358 00b0 00       		.byte	0
 2359 00b1 00       		.byte	0
 2360 00b2 0D       		.uleb128 0xd
 2361 00b3 898201   		.uleb128 0x4109
 2362 00b6 01       		.byte	0x1
 2363 00b7 11       		.uleb128 0x11
 2364 00b8 01       		.uleb128 0x1
 2365 00b9 31       		.uleb128 0x31
 2366 00ba 13       		.uleb128 0x13
 2367 00bb 00       		.byte	0
 2368 00bc 00       		.byte	0
 2369 00bd 0E       		.uleb128 0xe
 2370 00be 1D       		.uleb128 0x1d
 2371 00bf 01       		.byte	0x1
 2372 00c0 31       		.uleb128 0x31
 2373 00c1 13       		.uleb128 0x13
 2374 00c2 52       		.uleb128 0x52
 2375 00c3 01       		.uleb128 0x1
 2376 00c4 55       		.uleb128 0x55
 2377 00c5 17       		.uleb128 0x17
 2378 00c6 58       		.uleb128 0x58
 2379 00c7 0B       		.uleb128 0xb
 2380 00c8 59       		.uleb128 0x59
 2381 00c9 0B       		.uleb128 0xb
 2382 00ca 00       		.byte	0
 2383 00cb 00       		.byte	0
 2384 00cc 0F       		.uleb128 0xf
 2385 00cd 0B       		.uleb128 0xb
 2386 00ce 01       		.byte	0x1
 2387 00cf 55       		.uleb128 0x55
 2388 00d0 17       		.uleb128 0x17
 2389 00d1 00       		.byte	0
 2390 00d2 00       		.byte	0
 2391 00d3 10       		.uleb128 0x10
 2392 00d4 34       		.uleb128 0x34
 2393 00d5 00       		.byte	0
 2394 00d6 31       		.uleb128 0x31
 2395 00d7 13       		.uleb128 0x13
 2396 00d8 02       		.uleb128 0x2
 2397 00d9 17       		.uleb128 0x17
 2398 00da 00       		.byte	0
 2399 00db 00       		.byte	0
 2400 00dc 11       		.uleb128 0x11
 2401 00dd 898201   		.uleb128 0x4109
 2402 00e0 00       		.byte	0
 2403 00e1 11       		.uleb128 0x11
 2404 00e2 01       		.uleb128 0x1
 2405 00e3 31       		.uleb128 0x31
 2406 00e4 13       		.uleb128 0x13
 2407 00e5 00       		.byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 74


 2408 00e6 00       		.byte	0
 2409 00e7 12       		.uleb128 0x12
 2410 00e8 898201   		.uleb128 0x4109
 2411 00eb 00       		.byte	0
 2412 00ec 11       		.uleb128 0x11
 2413 00ed 01       		.uleb128 0x1
 2414 00ee 9542     		.uleb128 0x2115
 2415 00f0 19       		.uleb128 0x19
 2416 00f1 31       		.uleb128 0x31
 2417 00f2 13       		.uleb128 0x13
 2418 00f3 00       		.byte	0
 2419 00f4 00       		.byte	0
 2420 00f5 13       		.uleb128 0x13
 2421 00f6 2E       		.uleb128 0x2e
 2422 00f7 01       		.byte	0x1
 2423 00f8 31       		.uleb128 0x31
 2424 00f9 13       		.uleb128 0x13
 2425 00fa 11       		.uleb128 0x11
 2426 00fb 01       		.uleb128 0x1
 2427 00fc 12       		.uleb128 0x12
 2428 00fd 06       		.uleb128 0x6
 2429 00fe 40       		.uleb128 0x40
 2430 00ff 18       		.uleb128 0x18
 2431 0100 9742     		.uleb128 0x2117
 2432 0102 19       		.uleb128 0x19
 2433 0103 01       		.uleb128 0x1
 2434 0104 13       		.uleb128 0x13
 2435 0105 00       		.byte	0
 2436 0106 00       		.byte	0
 2437 0107 14       		.uleb128 0x14
 2438 0108 34       		.uleb128 0x34
 2439 0109 00       		.byte	0
 2440 010a 03       		.uleb128 0x3
 2441 010b 0E       		.uleb128 0xe
 2442 010c 3A       		.uleb128 0x3a
 2443 010d 0B       		.uleb128 0xb
 2444 010e 3B       		.uleb128 0x3b
 2445 010f 0B       		.uleb128 0xb
 2446 0110 49       		.uleb128 0x49
 2447 0111 13       		.uleb128 0x13
 2448 0112 02       		.uleb128 0x2
 2449 0113 17       		.uleb128 0x17
 2450 0114 00       		.byte	0
 2451 0115 00       		.byte	0
 2452 0116 15       		.uleb128 0x15
 2453 0117 2E       		.uleb128 0x2e
 2454 0118 00       		.byte	0
 2455 0119 3F       		.uleb128 0x3f
 2456 011a 19       		.uleb128 0x19
 2457 011b 03       		.uleb128 0x3
 2458 011c 0E       		.uleb128 0xe
 2459 011d 3A       		.uleb128 0x3a
 2460 011e 0B       		.uleb128 0xb
 2461 011f 3B       		.uleb128 0x3b
 2462 0120 05       		.uleb128 0x5
 2463 0121 27       		.uleb128 0x27
 2464 0122 19       		.uleb128 0x19
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 75


 2465 0123 49       		.uleb128 0x49
 2466 0124 13       		.uleb128 0x13
 2467 0125 11       		.uleb128 0x11
 2468 0126 01       		.uleb128 0x1
 2469 0127 12       		.uleb128 0x12
 2470 0128 06       		.uleb128 0x6
 2471 0129 40       		.uleb128 0x40
 2472 012a 18       		.uleb128 0x18
 2473 012b 9742     		.uleb128 0x2117
 2474 012d 19       		.uleb128 0x19
 2475 012e 00       		.byte	0
 2476 012f 00       		.byte	0
 2477 0130 16       		.uleb128 0x16
 2478 0131 2E       		.uleb128 0x2e
 2479 0132 01       		.byte	0x1
 2480 0133 3F       		.uleb128 0x3f
 2481 0134 19       		.uleb128 0x19
 2482 0135 03       		.uleb128 0x3
 2483 0136 0E       		.uleb128 0xe
 2484 0137 3A       		.uleb128 0x3a
 2485 0138 0B       		.uleb128 0xb
 2486 0139 3B       		.uleb128 0x3b
 2487 013a 05       		.uleb128 0x5
 2488 013b 27       		.uleb128 0x27
 2489 013c 19       		.uleb128 0x19
 2490 013d 11       		.uleb128 0x11
 2491 013e 01       		.uleb128 0x1
 2492 013f 12       		.uleb128 0x12
 2493 0140 06       		.uleb128 0x6
 2494 0141 40       		.uleb128 0x40
 2495 0142 18       		.uleb128 0x18
 2496 0143 9742     		.uleb128 0x2117
 2497 0145 19       		.uleb128 0x19
 2498 0146 01       		.uleb128 0x1
 2499 0147 13       		.uleb128 0x13
 2500 0148 00       		.byte	0
 2501 0149 00       		.byte	0
 2502 014a 17       		.uleb128 0x17
 2503 014b 05       		.uleb128 0x5
 2504 014c 00       		.byte	0
 2505 014d 03       		.uleb128 0x3
 2506 014e 0E       		.uleb128 0xe
 2507 014f 3A       		.uleb128 0x3a
 2508 0150 0B       		.uleb128 0xb
 2509 0151 3B       		.uleb128 0x3b
 2510 0152 05       		.uleb128 0x5
 2511 0153 49       		.uleb128 0x49
 2512 0154 13       		.uleb128 0x13
 2513 0155 02       		.uleb128 0x2
 2514 0156 18       		.uleb128 0x18
 2515 0157 00       		.byte	0
 2516 0158 00       		.byte	0
 2517 0159 18       		.uleb128 0x18
 2518 015a 2E       		.uleb128 0x2e
 2519 015b 01       		.byte	0x1
 2520 015c 3F       		.uleb128 0x3f
 2521 015d 19       		.uleb128 0x19
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 76


 2522 015e 03       		.uleb128 0x3
 2523 015f 0E       		.uleb128 0xe
 2524 0160 3A       		.uleb128 0x3a
 2525 0161 0B       		.uleb128 0xb
 2526 0162 3B       		.uleb128 0x3b
 2527 0163 05       		.uleb128 0x5
 2528 0164 27       		.uleb128 0x27
 2529 0165 19       		.uleb128 0x19
 2530 0166 20       		.uleb128 0x20
 2531 0167 0B       		.uleb128 0xb
 2532 0168 01       		.uleb128 0x1
 2533 0169 13       		.uleb128 0x13
 2534 016a 00       		.byte	0
 2535 016b 00       		.byte	0
 2536 016c 19       		.uleb128 0x19
 2537 016d 05       		.uleb128 0x5
 2538 016e 00       		.byte	0
 2539 016f 03       		.uleb128 0x3
 2540 0170 0E       		.uleb128 0xe
 2541 0171 3A       		.uleb128 0x3a
 2542 0172 0B       		.uleb128 0xb
 2543 0173 3B       		.uleb128 0x3b
 2544 0174 05       		.uleb128 0x5
 2545 0175 49       		.uleb128 0x49
 2546 0176 13       		.uleb128 0x13
 2547 0177 00       		.byte	0
 2548 0178 00       		.byte	0
 2549 0179 1A       		.uleb128 0x1a
 2550 017a 34       		.uleb128 0x34
 2551 017b 00       		.byte	0
 2552 017c 03       		.uleb128 0x3
 2553 017d 0E       		.uleb128 0xe
 2554 017e 3A       		.uleb128 0x3a
 2555 017f 0B       		.uleb128 0xb
 2556 0180 3B       		.uleb128 0x3b
 2557 0181 05       		.uleb128 0x5
 2558 0182 49       		.uleb128 0x49
 2559 0183 13       		.uleb128 0x13
 2560 0184 00       		.byte	0
 2561 0185 00       		.byte	0
 2562 0186 1B       		.uleb128 0x1b
 2563 0187 05       		.uleb128 0x5
 2564 0188 00       		.byte	0
 2565 0189 31       		.uleb128 0x31
 2566 018a 13       		.uleb128 0x13
 2567 018b 02       		.uleb128 0x2
 2568 018c 18       		.uleb128 0x18
 2569 018d 00       		.byte	0
 2570 018e 00       		.byte	0
 2571 018f 1C       		.uleb128 0x1c
 2572 0190 34       		.uleb128 0x34
 2573 0191 00       		.byte	0
 2574 0192 31       		.uleb128 0x31
 2575 0193 13       		.uleb128 0x13
 2576 0194 00       		.byte	0
 2577 0195 00       		.byte	0
 2578 0196 1D       		.uleb128 0x1d
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 77


 2579 0197 34       		.uleb128 0x34
 2580 0198 00       		.byte	0
 2581 0199 31       		.uleb128 0x31
 2582 019a 13       		.uleb128 0x13
 2583 019b 02       		.uleb128 0x2
 2584 019c 18       		.uleb128 0x18
 2585 019d 00       		.byte	0
 2586 019e 00       		.byte	0
 2587 019f 1E       		.uleb128 0x1e
 2588 01a0 05       		.uleb128 0x5
 2589 01a1 00       		.byte	0
 2590 01a2 03       		.uleb128 0x3
 2591 01a3 0E       		.uleb128 0xe
 2592 01a4 3A       		.uleb128 0x3a
 2593 01a5 0B       		.uleb128 0xb
 2594 01a6 3B       		.uleb128 0x3b
 2595 01a7 05       		.uleb128 0x5
 2596 01a8 49       		.uleb128 0x49
 2597 01a9 13       		.uleb128 0x13
 2598 01aa 02       		.uleb128 0x2
 2599 01ab 17       		.uleb128 0x17
 2600 01ac 00       		.byte	0
 2601 01ad 00       		.byte	0
 2602 01ae 1F       		.uleb128 0x1f
 2603 01af 34       		.uleb128 0x34
 2604 01b0 00       		.byte	0
 2605 01b1 03       		.uleb128 0x3
 2606 01b2 0E       		.uleb128 0xe
 2607 01b3 3A       		.uleb128 0x3a
 2608 01b4 0B       		.uleb128 0xb
 2609 01b5 3B       		.uleb128 0x3b
 2610 01b6 05       		.uleb128 0x5
 2611 01b7 49       		.uleb128 0x49
 2612 01b8 13       		.uleb128 0x13
 2613 01b9 02       		.uleb128 0x2
 2614 01ba 17       		.uleb128 0x17
 2615 01bb 00       		.byte	0
 2616 01bc 00       		.byte	0
 2617 01bd 20       		.uleb128 0x20
 2618 01be 1D       		.uleb128 0x1d
 2619 01bf 01       		.byte	0x1
 2620 01c0 31       		.uleb128 0x31
 2621 01c1 13       		.uleb128 0x13
 2622 01c2 52       		.uleb128 0x52
 2623 01c3 01       		.uleb128 0x1
 2624 01c4 55       		.uleb128 0x55
 2625 01c5 17       		.uleb128 0x17
 2626 01c6 58       		.uleb128 0x58
 2627 01c7 0B       		.uleb128 0xb
 2628 01c8 59       		.uleb128 0x59
 2629 01c9 05       		.uleb128 0x5
 2630 01ca 00       		.byte	0
 2631 01cb 00       		.byte	0
 2632 01cc 21       		.uleb128 0x21
 2633 01cd 05       		.uleb128 0x5
 2634 01ce 00       		.byte	0
 2635 01cf 31       		.uleb128 0x31
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 78


 2636 01d0 13       		.uleb128 0x13
 2637 01d1 00       		.byte	0
 2638 01d2 00       		.byte	0
 2639 01d3 22       		.uleb128 0x22
 2640 01d4 0F       		.uleb128 0xf
 2641 01d5 00       		.byte	0
 2642 01d6 0B       		.uleb128 0xb
 2643 01d7 0B       		.uleb128 0xb
 2644 01d8 49       		.uleb128 0x49
 2645 01d9 13       		.uleb128 0x13
 2646 01da 00       		.byte	0
 2647 01db 00       		.byte	0
 2648 01dc 23       		.uleb128 0x23
 2649 01dd 26       		.uleb128 0x26
 2650 01de 00       		.byte	0
 2651 01df 49       		.uleb128 0x49
 2652 01e0 13       		.uleb128 0x13
 2653 01e1 00       		.byte	0
 2654 01e2 00       		.byte	0
 2655 01e3 24       		.uleb128 0x24
 2656 01e4 05       		.uleb128 0x5
 2657 01e5 00       		.byte	0
 2658 01e6 31       		.uleb128 0x31
 2659 01e7 13       		.uleb128 0x13
 2660 01e8 02       		.uleb128 0x2
 2661 01e9 17       		.uleb128 0x17
 2662 01ea 00       		.byte	0
 2663 01eb 00       		.byte	0
 2664 01ec 25       		.uleb128 0x25
 2665 01ed 1D       		.uleb128 0x1d
 2666 01ee 01       		.byte	0x1
 2667 01ef 31       		.uleb128 0x31
 2668 01f0 13       		.uleb128 0x13
 2669 01f1 52       		.uleb128 0x52
 2670 01f2 01       		.uleb128 0x1
 2671 01f3 55       		.uleb128 0x55
 2672 01f4 17       		.uleb128 0x17
 2673 01f5 58       		.uleb128 0x58
 2674 01f6 0B       		.uleb128 0xb
 2675 01f7 59       		.uleb128 0x59
 2676 01f8 05       		.uleb128 0x5
 2677 01f9 01       		.uleb128 0x1
 2678 01fa 13       		.uleb128 0x13
 2679 01fb 00       		.byte	0
 2680 01fc 00       		.byte	0
 2681 01fd 26       		.uleb128 0x26
 2682 01fe 2E       		.uleb128 0x2e
 2683 01ff 01       		.byte	0x1
 2684 0200 3F       		.uleb128 0x3f
 2685 0201 19       		.uleb128 0x19
 2686 0202 03       		.uleb128 0x3
 2687 0203 0E       		.uleb128 0xe
 2688 0204 3A       		.uleb128 0x3a
 2689 0205 0B       		.uleb128 0xb
 2690 0206 3B       		.uleb128 0x3b
 2691 0207 05       		.uleb128 0x5
 2692 0208 27       		.uleb128 0x27
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 79


 2693 0209 19       		.uleb128 0x19
 2694 020a 49       		.uleb128 0x49
 2695 020b 13       		.uleb128 0x13
 2696 020c 11       		.uleb128 0x11
 2697 020d 01       		.uleb128 0x1
 2698 020e 12       		.uleb128 0x12
 2699 020f 06       		.uleb128 0x6
 2700 0210 40       		.uleb128 0x40
 2701 0211 18       		.uleb128 0x18
 2702 0212 9742     		.uleb128 0x2117
 2703 0214 19       		.uleb128 0x19
 2704 0215 01       		.uleb128 0x1
 2705 0216 13       		.uleb128 0x13
 2706 0217 00       		.byte	0
 2707 0218 00       		.byte	0
 2708 0219 27       		.uleb128 0x27
 2709 021a 34       		.uleb128 0x34
 2710 021b 00       		.byte	0
 2711 021c 03       		.uleb128 0x3
 2712 021d 0E       		.uleb128 0xe
 2713 021e 3A       		.uleb128 0x3a
 2714 021f 0B       		.uleb128 0xb
 2715 0220 3B       		.uleb128 0x3b
 2716 0221 05       		.uleb128 0x5
 2717 0222 49       		.uleb128 0x49
 2718 0223 13       		.uleb128 0x13
 2719 0224 02       		.uleb128 0x2
 2720 0225 18       		.uleb128 0x18
 2721 0226 00       		.byte	0
 2722 0227 00       		.byte	0
 2723 0228 28       		.uleb128 0x28
 2724 0229 34       		.uleb128 0x34
 2725 022a 00       		.byte	0
 2726 022b 03       		.uleb128 0x3
 2727 022c 0E       		.uleb128 0xe
 2728 022d 3A       		.uleb128 0x3a
 2729 022e 0B       		.uleb128 0xb
 2730 022f 3B       		.uleb128 0x3b
 2731 0230 0B       		.uleb128 0xb
 2732 0231 49       		.uleb128 0x49
 2733 0232 13       		.uleb128 0x13
 2734 0233 3F       		.uleb128 0x3f
 2735 0234 19       		.uleb128 0x19
 2736 0235 02       		.uleb128 0x2
 2737 0236 18       		.uleb128 0x18
 2738 0237 00       		.byte	0
 2739 0238 00       		.byte	0
 2740 0239 29       		.uleb128 0x29
 2741 023a 01       		.uleb128 0x1
 2742 023b 01       		.byte	0x1
 2743 023c 49       		.uleb128 0x49
 2744 023d 13       		.uleb128 0x13
 2745 023e 01       		.uleb128 0x1
 2746 023f 13       		.uleb128 0x13
 2747 0240 00       		.byte	0
 2748 0241 00       		.byte	0
 2749 0242 2A       		.uleb128 0x2a
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 80


 2750 0243 21       		.uleb128 0x21
 2751 0244 00       		.byte	0
 2752 0245 49       		.uleb128 0x49
 2753 0246 13       		.uleb128 0x13
 2754 0247 2F       		.uleb128 0x2f
 2755 0248 05       		.uleb128 0x5
 2756 0249 00       		.byte	0
 2757 024a 00       		.byte	0
 2758 024b 2B       		.uleb128 0x2b
 2759 024c 2E       		.uleb128 0x2e
 2760 024d 00       		.byte	0
 2761 024e 3F       		.uleb128 0x3f
 2762 024f 19       		.uleb128 0x19
 2763 0250 3C       		.uleb128 0x3c
 2764 0251 19       		.uleb128 0x19
 2765 0252 6E       		.uleb128 0x6e
 2766 0253 0E       		.uleb128 0xe
 2767 0254 03       		.uleb128 0x3
 2768 0255 0E       		.uleb128 0xe
 2769 0256 3A       		.uleb128 0x3a
 2770 0257 0B       		.uleb128 0xb
 2771 0258 3B       		.uleb128 0x3b
 2772 0259 0B       		.uleb128 0xb
 2773 025a 00       		.byte	0
 2774 025b 00       		.byte	0
 2775 025c 00       		.byte	0
 2776              		.section	.debug_loc,"",%progbits
 2777              	.Ldebug_loc0:
 2778              	.LLST0:
 2779 0000 34000000 		.4byte	.LVL3
 2780 0004 52000000 		.4byte	.LVL5
 2781 0008 0100     		.2byte	0x1
 2782 000a 54       		.byte	0x54
 2783 000b 00000000 		.4byte	0
 2784 000f 00000000 		.4byte	0
 2785              	.LLST1:
 2786 0013 08000000 		.4byte	.LVL10
 2787 0017 26000000 		.4byte	.LVL12
 2788 001b 0100     		.2byte	0x1
 2789 001d 54       		.byte	0x54
 2790 001e 00000000 		.4byte	0
 2791 0022 00000000 		.4byte	0
 2792              	.LLST2:
 2793 0026 08000000 		.4byte	.LVL15
 2794 002a 22000000 		.4byte	.LVL17
 2795 002e 0100     		.2byte	0x1
 2796 0030 55       		.byte	0x55
 2797 0031 00000000 		.4byte	0
 2798 0035 00000000 		.4byte	0
 2799              	.LLST3:
 2800 0039 00000000 		.4byte	.LVL22
 2801 003d 10000000 		.4byte	.LVL23
 2802 0041 0100     		.2byte	0x1
 2803 0043 50       		.byte	0x50
 2804 0044 10000000 		.4byte	.LVL23
 2805 0048 88000000 		.4byte	.LVL27
 2806 004c 0100     		.2byte	0x1
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 81


 2807 004e 58       		.byte	0x58
 2808 004f 88000000 		.4byte	.LVL27
 2809 0053 8C000000 		.4byte	.LVL28
 2810 0057 0400     		.2byte	0x4
 2811 0059 F3       		.byte	0xf3
 2812 005a 01       		.uleb128 0x1
 2813 005b 50       		.byte	0x50
 2814 005c 9F       		.byte	0x9f
 2815 005d 8C000000 		.4byte	.LVL28
 2816 0061 B0000000 		.4byte	.LFE10
 2817 0065 0100     		.2byte	0x1
 2818 0067 58       		.byte	0x58
 2819 0068 00000000 		.4byte	0
 2820 006c 00000000 		.4byte	0
 2821              	.LLST4:
 2822 0070 00000000 		.4byte	.LVL22
 2823 0074 2C000000 		.4byte	.LVL24
 2824 0078 0200     		.2byte	0x2
 2825 007a 30       		.byte	0x30
 2826 007b 9F       		.byte	0x9f
 2827 007c 2C000000 		.4byte	.LVL24
 2828 0080 7C000000 		.4byte	.LVL25
 2829 0084 0100     		.2byte	0x1
 2830 0086 5E       		.byte	0x5e
 2831 0087 80000000 		.4byte	.LVL26
 2832 008b 88000000 		.4byte	.LVL27
 2833 008f 0100     		.2byte	0x1
 2834 0091 5E       		.byte	0x5e
 2835 0092 8C000000 		.4byte	.LVL28
 2836 0096 B0000000 		.4byte	.LFE10
 2837 009a 0100     		.2byte	0x1
 2838 009c 5E       		.byte	0x5e
 2839 009d 00000000 		.4byte	0
 2840 00a1 00000000 		.4byte	0
 2841              	.LLST5:
 2842 00a5 00000000 		.4byte	.LVL29
 2843 00a9 30000000 		.4byte	.LVL30
 2844 00ad 0100     		.2byte	0x1
 2845 00af 50       		.byte	0x50
 2846 00b0 30000000 		.4byte	.LVL30
 2847 00b4 B0000000 		.4byte	.LFE11
 2848 00b8 0400     		.2byte	0x4
 2849 00ba F3       		.byte	0xf3
 2850 00bb 01       		.uleb128 0x1
 2851 00bc 50       		.byte	0x50
 2852 00bd 9F       		.byte	0x9f
 2853 00be 00000000 		.4byte	0
 2854 00c2 00000000 		.4byte	0
 2855              	.LLST6:
 2856 00c6 00000000 		.4byte	.LVL29
 2857 00ca 30000000 		.4byte	.LVL30
 2858 00ce 0100     		.2byte	0x1
 2859 00d0 51       		.byte	0x51
 2860 00d1 30000000 		.4byte	.LVL30
 2861 00d5 B0000000 		.4byte	.LFE11
 2862 00d9 0400     		.2byte	0x4
 2863 00db F3       		.byte	0xf3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 82


 2864 00dc 01       		.uleb128 0x1
 2865 00dd 51       		.byte	0x51
 2866 00de 9F       		.byte	0x9f
 2867 00df 00000000 		.4byte	0
 2868 00e3 00000000 		.4byte	0
 2869              	.LLST7:
 2870 00e7 00000000 		.4byte	.LVL29
 2871 00eb 30000000 		.4byte	.LVL30
 2872 00ef 0200     		.2byte	0x2
 2873 00f1 30       		.byte	0x30
 2874 00f2 9F       		.byte	0x9f
 2875 00f3 30000000 		.4byte	.LVL30
 2876 00f7 34000000 		.4byte	.LVL31
 2877 00fb 0900     		.2byte	0x9
 2878 00fd 77       		.byte	0x77
 2879 00fe 00       		.sleb128 0
 2880 00ff F3       		.byte	0xf3
 2881 0100 01       		.uleb128 0x1
 2882 0101 50       		.byte	0x50
 2883 0102 31       		.byte	0x31
 2884 0103 1C       		.byte	0x1c
 2885 0104 1C       		.byte	0x1c
 2886 0105 9F       		.byte	0x9f
 2887 0106 86000000 		.4byte	.LVL32
 2888 010a 8A000000 		.4byte	.LVL33
 2889 010e 0900     		.2byte	0x9
 2890 0110 77       		.byte	0x77
 2891 0111 00       		.sleb128 0
 2892 0112 F3       		.byte	0xf3
 2893 0113 01       		.uleb128 0x1
 2894 0114 50       		.byte	0x50
 2895 0115 31       		.byte	0x31
 2896 0116 1C       		.byte	0x1c
 2897 0117 1C       		.byte	0x1c
 2898 0118 9F       		.byte	0x9f
 2899 0119 00000000 		.4byte	0
 2900 011d 00000000 		.4byte	0
 2901              	.LLST8:
 2902 0121 34000000 		.4byte	.LVL31
 2903 0125 86000000 		.4byte	.LVL32
 2904 0129 0100     		.2byte	0x1
 2905 012b 55       		.byte	0x55
 2906 012c 8E000000 		.4byte	.LVL34
 2907 0130 B0000000 		.4byte	.LFE11
 2908 0134 0100     		.2byte	0x1
 2909 0136 55       		.byte	0x55
 2910 0137 00000000 		.4byte	0
 2911 013b 00000000 		.4byte	0
 2912              	.LLST9:
 2913 013f 00000000 		.4byte	.LVL35
 2914 0143 08000000 		.4byte	.LVL36
 2915 0147 0100     		.2byte	0x1
 2916 0149 50       		.byte	0x50
 2917 014a 08000000 		.4byte	.LVL36
 2918 014e 0C000000 		.4byte	.LVL37
 2919 0152 0400     		.2byte	0x4
 2920 0154 F3       		.byte	0xf3
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 83


 2921 0155 01       		.uleb128 0x1
 2922 0156 50       		.byte	0x50
 2923 0157 9F       		.byte	0x9f
 2924 0158 0C000000 		.4byte	.LVL37
 2925 015c 64000000 		.4byte	.LVL38
 2926 0160 0100     		.2byte	0x1
 2927 0162 50       		.byte	0x50
 2928 0163 64000000 		.4byte	.LVL38
 2929 0167 10010000 		.4byte	.LVL39
 2930 016b 0400     		.2byte	0x4
 2931 016d F3       		.byte	0xf3
 2932 016e 01       		.uleb128 0x1
 2933 016f 50       		.byte	0x50
 2934 0170 9F       		.byte	0x9f
 2935 0171 10010000 		.4byte	.LVL39
 2936 0175 20010000 		.4byte	.LVL40
 2937 0179 0100     		.2byte	0x1
 2938 017b 50       		.byte	0x50
 2939 017c 20010000 		.4byte	.LVL40
 2940 0180 58010000 		.4byte	.LFE12
 2941 0184 0400     		.2byte	0x4
 2942 0186 F3       		.byte	0xf3
 2943 0187 01       		.uleb128 0x1
 2944 0188 50       		.byte	0x50
 2945 0189 9F       		.byte	0x9f
 2946 018a 00000000 		.4byte	0
 2947 018e 00000000 		.4byte	0
 2948              	.LLST10:
 2949 0192 28000000 		.4byte	.LVL41
 2950 0196 2C000000 		.4byte	.LVL42
 2951 019a 0100     		.2byte	0x1
 2952 019c 50       		.byte	0x50
 2953 019d 32000000 		.4byte	.LVL43
 2954 01a1 44000000 		.4byte	.LFE13
 2955 01a5 0100     		.2byte	0x1
 2956 01a7 50       		.byte	0x50
 2957 01a8 00000000 		.4byte	0
 2958 01ac 00000000 		.4byte	0
 2959              	.LLST11:
 2960 01b0 06000000 		.4byte	.LVL44
 2961 01b4 1D000000 		.4byte	.LVL45-1
 2962 01b8 0100     		.2byte	0x1
 2963 01ba 50       		.byte	0x50
 2964 01bb 00000000 		.4byte	0
 2965 01bf 00000000 		.4byte	0
 2966              	.LLST12:
 2967 01c3 00000000 		.4byte	.LVL46
 2968 01c7 2C000000 		.4byte	.LVL49
 2969 01cb 0100     		.2byte	0x1
 2970 01cd 50       		.byte	0x50
 2971 01ce 2C000000 		.4byte	.LVL49
 2972 01d2 3A000000 		.4byte	.LVL50
 2973 01d6 0400     		.2byte	0x4
 2974 01d8 F3       		.byte	0xf3
 2975 01d9 01       		.uleb128 0x1
 2976 01da 50       		.byte	0x50
 2977 01db 9F       		.byte	0x9f
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 84


 2978 01dc 3A000000 		.4byte	.LVL50
 2979 01e0 5C000000 		.4byte	.LFE15
 2980 01e4 0100     		.2byte	0x1
 2981 01e6 50       		.byte	0x50
 2982 01e7 00000000 		.4byte	0
 2983 01eb 00000000 		.4byte	0
 2984              	.LLST13:
 2985 01ef 1E000000 		.4byte	.LVL47
 2986 01f3 26000000 		.4byte	.LVL48
 2987 01f7 0100     		.2byte	0x1
 2988 01f9 53       		.byte	0x53
 2989 01fa 46000000 		.4byte	.LVL51
 2990 01fe 48000000 		.4byte	.LVL52
 2991 0202 0100     		.2byte	0x1
 2992 0204 53       		.byte	0x53
 2993 0205 00000000 		.4byte	0
 2994 0209 00000000 		.4byte	0
 2995              		.section	.debug_aranges,"",%progbits
 2996 0000 94000000 		.4byte	0x94
 2997 0004 0200     		.2byte	0x2
 2998 0006 00000000 		.4byte	.Ldebug_info0
 2999 000a 04       		.byte	0x4
 3000 000b 00       		.byte	0
 3001 000c 0000     		.2byte	0
 3002 000e 0000     		.2byte	0
 3003 0010 00000000 		.4byte	.LFB0
 3004 0014 78000000 		.4byte	.LFE0-.LFB0
 3005 0018 00000000 		.4byte	.LFB1
 3006 001c 38000000 		.4byte	.LFE1-.LFB1
 3007 0020 00000000 		.4byte	.LFB2
 3008 0024 38000000 		.4byte	.LFE2-.LFB2
 3009 0028 00000000 		.4byte	.LFB3
 3010 002c 30000000 		.4byte	.LFE3-.LFB3
 3011 0030 00000000 		.4byte	.LFB4
 3012 0034 04000000 		.4byte	.LFE4-.LFB4
 3013 0038 00000000 		.4byte	.LFB6
 3014 003c 0C000000 		.4byte	.LFE6-.LFB6
 3015 0040 00000000 		.4byte	.LFB7
 3016 0044 60000000 		.4byte	.LFE7-.LFB7
 3017 0048 00000000 		.4byte	.LFB8
 3018 004c 0C000000 		.4byte	.LFE8-.LFB8
 3019 0050 00000000 		.4byte	.LFB9
 3020 0054 80000000 		.4byte	.LFE9-.LFB9
 3021 0058 00000000 		.4byte	.LFB10
 3022 005c B0000000 		.4byte	.LFE10-.LFB10
 3023 0060 00000000 		.4byte	.LFB11
 3024 0064 B0000000 		.4byte	.LFE11-.LFB11
 3025 0068 00000000 		.4byte	.LFB12
 3026 006c 58010000 		.4byte	.LFE12-.LFB12
 3027 0070 00000000 		.4byte	.LFB13
 3028 0074 44000000 		.4byte	.LFE13-.LFB13
 3029 0078 00000000 		.4byte	.LFB14
 3030 007c 40000000 		.4byte	.LFE14-.LFB14
 3031 0080 00000000 		.4byte	.LFB15
 3032 0084 5C000000 		.4byte	.LFE15-.LFB15
 3033 0088 00000000 		.4byte	.LFB16
 3034 008c 02000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 85


 3035 0090 00000000 		.4byte	0
 3036 0094 00000000 		.4byte	0
 3037              		.section	.debug_ranges,"",%progbits
 3038              	.Ldebug_ranges0:
 3039 0000 08000000 		.4byte	.LBB6
 3040 0004 24000000 		.4byte	.LBE6
 3041 0008 26000000 		.4byte	.LBB9
 3042 000c 2C000000 		.4byte	.LBE9
 3043 0010 00000000 		.4byte	0
 3044 0014 00000000 		.4byte	0
 3045 0018 2E000000 		.4byte	.LBB10
 3046 001c 4E000000 		.4byte	.LBE10
 3047 0020 52000000 		.4byte	.LBB13
 3048 0024 78000000 		.4byte	.LBE13
 3049 0028 00000000 		.4byte	0
 3050 002c 00000000 		.4byte	0
 3051 0030 14000000 		.4byte	.LBB16
 3052 0034 24000000 		.4byte	.LBE16
 3053 0038 28000000 		.4byte	.LBB20
 3054 003c 78000000 		.4byte	.LBE20
 3055 0040 8C000000 		.4byte	.LBB21
 3056 0044 B0000000 		.4byte	.LBE21
 3057 0048 00000000 		.4byte	0
 3058 004c 00000000 		.4byte	0
 3059 0050 10000000 		.4byte	.LBB24
 3060 0054 30000000 		.4byte	.LBE24
 3061 0058 36000000 		.4byte	.LBB28
 3062 005c 86000000 		.4byte	.LBE28
 3063 0060 8E000000 		.4byte	.LBB29
 3064 0064 B0000000 		.4byte	.LBE29
 3065 0068 00000000 		.4byte	0
 3066 006c 00000000 		.4byte	0
 3067 0070 0C000000 		.4byte	.LBB36
 3068 0074 60000000 		.4byte	.LBE36
 3069 0078 10010000 		.4byte	.LBB47
 3070 007c 20010000 		.4byte	.LBE47
 3071 0080 00000000 		.4byte	0
 3072 0084 00000000 		.4byte	0
 3073 0088 60000000 		.4byte	.LBB39
 3074 008c B6000000 		.4byte	.LBE39
 3075 0090 30010000 		.4byte	.LBB49
 3076 0094 58010000 		.4byte	.LBE49
 3077 0098 00000000 		.4byte	0
 3078 009c 00000000 		.4byte	0
 3079 00a0 B6000000 		.4byte	.LBB42
 3080 00a4 06010000 		.4byte	.LBE42
 3081 00a8 08010000 		.4byte	.LBB46
 3082 00ac 0E010000 		.4byte	.LBE46
 3083 00b0 20010000 		.4byte	.LBB48
 3084 00b4 30010000 		.4byte	.LBE48
 3085 00b8 00000000 		.4byte	0
 3086 00bc 00000000 		.4byte	0
 3087 00c0 08000000 		.4byte	.LBB50
 3088 00c4 36000000 		.4byte	.LBE50
 3089 00c8 3A000000 		.4byte	.LBB51
 3090 00cc 5C000000 		.4byte	.LBE51
 3091 00d0 00000000 		.4byte	0
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 86


 3092 00d4 00000000 		.4byte	0
 3093 00d8 00000000 		.4byte	.LFB0
 3094 00dc 78000000 		.4byte	.LFE0
 3095 00e0 00000000 		.4byte	.LFB1
 3096 00e4 38000000 		.4byte	.LFE1
 3097 00e8 00000000 		.4byte	.LFB2
 3098 00ec 38000000 		.4byte	.LFE2
 3099 00f0 00000000 		.4byte	.LFB3
 3100 00f4 30000000 		.4byte	.LFE3
 3101 00f8 00000000 		.4byte	.LFB4
 3102 00fc 04000000 		.4byte	.LFE4
 3103 0100 00000000 		.4byte	.LFB6
 3104 0104 0C000000 		.4byte	.LFE6
 3105 0108 00000000 		.4byte	.LFB7
 3106 010c 60000000 		.4byte	.LFE7
 3107 0110 00000000 		.4byte	.LFB8
 3108 0114 0C000000 		.4byte	.LFE8
 3109 0118 00000000 		.4byte	.LFB9
 3110 011c 80000000 		.4byte	.LFE9
 3111 0120 00000000 		.4byte	.LFB10
 3112 0124 B0000000 		.4byte	.LFE10
 3113 0128 00000000 		.4byte	.LFB11
 3114 012c B0000000 		.4byte	.LFE11
 3115 0130 00000000 		.4byte	.LFB12
 3116 0134 58010000 		.4byte	.LFE12
 3117 0138 00000000 		.4byte	.LFB13
 3118 013c 44000000 		.4byte	.LFE13
 3119 0140 00000000 		.4byte	.LFB14
 3120 0144 40000000 		.4byte	.LFE14
 3121 0148 00000000 		.4byte	.LFB15
 3122 014c 5C000000 		.4byte	.LFE15
 3123 0150 00000000 		.4byte	.LFB16
 3124 0154 02000000 		.4byte	.LFE16
 3125 0158 00000000 		.4byte	0
 3126 015c 00000000 		.4byte	0
 3127              		.section	.debug_line,"",%progbits
 3128              	.Ldebug_line0:
 3129 0000 80030000 		.section	.debug_str,"MS",%progbits,1
 3129      02005F00 
 3129      00000201 
 3129      FB0E0D00 
 3129      01010101 
 3130              	.LASF6:
 3131 0000 6C6F6E67 		.ascii	"long long int\000"
 3131      206C6F6E 
 3131      6720696E 
 3131      7400
 3132              	.LASF17:
 3133 000e 72656733 		.ascii	"reg32\000"
 3133      3200
 3134              	.LASF57:
 3135 0014 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3135      43313120 
 3135      352E342E 
 3135      31203230 
 3135      31363036 
 3136 0047 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 87


 3136      20726576 
 3136      6973696F 
 3136      6E203233 
 3136      37373135 
 3137 007a 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 3137      66756E63 
 3137      74696F6E 
 3137      2D736563 
 3137      74696F6E 
 3138              	.LASF44:
 3139 00a2 74785065 		.ascii	"txPeriod\000"
 3139      72696F64 
 3139      00
 3140              	.LASF14:
 3141 00ab 63686172 		.ascii	"char8\000"
 3141      3800
 3142              	.LASF51:
 3143 00b1 4379496E 		.ascii	"CyIntSetVector\000"
 3143      74536574 
 3143      56656374 
 3143      6F7200
 3144              	.LASF43:
 3145 00c0 746D7053 		.ascii	"tmpStat\000"
 3145      74617400 
 3146              	.LASF48:
 3147 00c8 55415254 		.ascii	"UART_txBuffer\000"
 3147      5F747842 
 3147      75666665 
 3147      7200
 3148              	.LASF3:
 3149 00d6 73686F72 		.ascii	"short unsigned int\000"
 3149      7420756E 
 3149      7369676E 
 3149      65642069 
 3149      6E7400
 3150              	.LASF2:
 3151 00e9 73686F72 		.ascii	"short int\000"
 3151      7420696E 
 3151      7400
 3152              	.LASF47:
 3153 00f3 55415254 		.ascii	"UART_initVar\000"
 3153      5F696E69 
 3153      74566172 
 3153      00
 3154              	.LASF34:
 3155 0100 73747269 		.ascii	"string\000"
 3155      6E6700
 3156              	.LASF54:
 3157 0107 55415254 		.ascii	"UART_IntClock_Start\000"
 3157      5F496E74 
 3157      436C6F63 
 3157      6B5F5374 
 3157      61727400 
 3158              	.LASF12:
 3159 011b 666C6F61 		.ascii	"float\000"
 3159      7400
 3160              	.LASF7:
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 88


 3161 0121 6C6F6E67 		.ascii	"long long unsigned int\000"
 3161      206C6F6E 
 3161      6720756E 
 3161      7369676E 
 3161      65642069 
 3162              	.LASF46:
 3163 0138 61646472 		.ascii	"addressMode\000"
 3163      6573734D 
 3163      6F646500 
 3164              	.LASF60:
 3165 0144 55415254 		.ascii	"UART_Init\000"
 3165      5F496E69 
 3165      7400
 3166              	.LASF16:
 3167 014e 72656738 		.ascii	"reg8\000"
 3167      00
 3168              	.LASF58:
 3169 0153 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 3169      72617465 
 3169      645F536F 
 3169      75726365 
 3169      5C50536F 
 3170              	.LASF5:
 3171 0171 6C6F6E67 		.ascii	"long unsigned int\000"
 3171      20756E73 
 3171      69676E65 
 3171      6420696E 
 3171      7400
 3172              	.LASF9:
 3173 0183 75696E74 		.ascii	"uint8\000"
 3173      3800
 3174              	.LASF20:
 3175 0189 55415254 		.ascii	"UART_Start\000"
 3175      5F537461 
 3175      727400
 3176              	.LASF36:
 3177 0194 55415254 		.ascii	"UART_PutArray\000"
 3177      5F507574 
 3177      41727261 
 3177      7900
 3178              	.LASF37:
 3179 01a2 62797465 		.ascii	"byteCount\000"
 3179      436F756E 
 3179      7400
 3180              	.LASF30:
 3181 01ac 656E6162 		.ascii	"enableInterrupts\000"
 3181      6C65496E 
 3181      74657272 
 3181      75707473 
 3181      00
 3182              	.LASF32:
 3183 01bd 6C6F6354 		.ascii	"locTxBufferRead\000"
 3183      78427566 
 3183      66657252 
 3183      65616400 
 3184              	.LASF13:
 3185 01cd 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 89


 3185      6C6500
 3186              	.LASF24:
 3187 01d4 696E7453 		.ascii	"intSrc\000"
 3187      726300
 3188              	.LASF59:
 3189 01db 433A5C55 		.ascii	"C:\\Users\\sinow\\Documents\\PSoC Creator\\fa19_fix"
 3189      73657273 
 3189      5C73696E 
 3189      6F775C44 
 3189      6F63756D 
 3190 0209 65645F70 		.ascii	"ed_point_oscillator\\fa19_fixed_point_oscillator.cy"
 3190      6F696E74 
 3190      5F6F7363 
 3190      696C6C61 
 3190      746F725C 
 3191 023b 64736E00 		.ascii	"dsn\000"
 3192              	.LASF10:
 3193 023f 75696E74 		.ascii	"uint16\000"
 3193      313600
 3194              	.LASF41:
 3195 0246 55415254 		.ascii	"UART_SendBreak\000"
 3195      5F53656E 
 3195      64427265 
 3195      616B00
 3196              	.LASF11:
 3197 0255 75696E74 		.ascii	"uint32\000"
 3197      333200
 3198              	.LASF45:
 3199 025c 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3199      5F536574 
 3199      54784164 
 3199      64726573 
 3199      734D6F64 
 3200              	.LASF53:
 3201 0272 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3201      74657243 
 3201      72697469 
 3201      63616C53 
 3201      65637469 
 3202              	.LASF1:
 3203 0289 756E7369 		.ascii	"unsigned char\000"
 3203      676E6564 
 3203      20636861 
 3203      7200
 3204              	.LASF8:
 3205 0297 756E7369 		.ascii	"unsigned int\000"
 3205      676E6564 
 3205      20696E74 
 3205      00
 3206              	.LASF27:
 3207 02a4 55415254 		.ascii	"UART_ReadTxStatus\000"
 3207      5F526561 
 3207      64547853 
 3207      74617475 
 3207      7300
 3208              	.LASF55:
 3209 02b6 43794578 		.ascii	"CyExitCriticalSection\000"
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 90


 3209      69744372 
 3209      69746963 
 3209      616C5365 
 3209      6374696F 
 3210              	.LASF52:
 3211 02cc 4379496E 		.ascii	"CyIntSetPriority\000"
 3211      74536574 
 3211      5072696F 
 3211      72697479 
 3211      00
 3212              	.LASF26:
 3213 02dd 55415254 		.ascii	"UART_ReadControlRegister\000"
 3213      5F526561 
 3213      64436F6E 
 3213      74726F6C 
 3213      52656769 
 3214              	.LASF38:
 3215 02f6 55415254 		.ascii	"UART_PutCRLF\000"
 3215      5F507574 
 3215      43524C46 
 3215      00
 3216              	.LASF35:
 3217 0303 62756649 		.ascii	"bufIndex\000"
 3217      6E646578 
 3217      00
 3218              	.LASF22:
 3219 030c 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3219      5F536574 
 3219      5478496E 
 3219      74657272 
 3219      7570744D 
 3220              	.LASF18:
 3221 0324 6C6F6E67 		.ascii	"long double\000"
 3221      20646F75 
 3221      626C6500 
 3222              	.LASF29:
 3223 0330 55415254 		.ascii	"UART_PutChar\000"
 3223      5F507574 
 3223      43686172 
 3223      00
 3224              	.LASF56:
 3225 033d 55415254 		.ascii	"UART_IntClock_Stop\000"
 3225      5F496E74 
 3225      436C6F63 
 3225      6B5F5374 
 3225      6F7000
 3226              	.LASF19:
 3227 0350 73697A65 		.ascii	"sizetype\000"
 3227      74797065 
 3227      00
 3228              	.LASF25:
 3229 0359 74784461 		.ascii	"txDataByte\000"
 3229      74614279 
 3229      746500
 3230              	.LASF15:
 3231 0364 63686172 		.ascii	"char\000"
 3231      00
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 91


 3232              	.LASF23:
 3233 0369 55415254 		.ascii	"UART_WriteTxData\000"
 3233      5F577269 
 3233      74655478 
 3233      44617461 
 3233      00
 3234              	.LASF42:
 3235 037a 7265744D 		.ascii	"retMode\000"
 3235      6F646500 
 3236              	.LASF31:
 3237 0382 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3237      78427566 
 3237      66657257 
 3237      72697465 
 3237      00
 3238              	.LASF40:
 3239 0393 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3239      5F436C65 
 3239      61725478 
 3239      42756666 
 3239      657200
 3240              	.LASF21:
 3241 03a6 55415254 		.ascii	"UART_Stop\000"
 3241      5F53746F 
 3241      7000
 3242              	.LASF50:
 3243 03b0 55415254 		.ascii	"UART_txBufferWrite\000"
 3243      5F747842 
 3243      75666665 
 3243      72577269 
 3243      746500
 3244              	.LASF61:
 3245 03c3 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3245      5F476574 
 3245      54784275 
 3245      66666572 
 3245      53697A65 
 3246              	.LASF4:
 3247 03d8 6C6F6E67 		.ascii	"long int\000"
 3247      20696E74 
 3247      00
 3248              	.LASF49:
 3249 03e1 55415254 		.ascii	"UART_txBufferRead\000"
 3249      5F747842 
 3249      75666665 
 3249      72526561 
 3249      6400
 3250              	.LASF28:
 3251 03f3 55415254 		.ascii	"UART_Enable\000"
 3251      5F456E61 
 3251      626C6500 
 3252              	.LASF0:
 3253 03ff 7369676E 		.ascii	"signed char\000"
 3253      65642063 
 3253      68617200 
 3254              	.LASF33:
 3255 040b 55415254 		.ascii	"UART_PutString\000"
ARM GAS  C:\Users\sinow\AppData\Local\Temp\ccAF0SrB.s 			page 92


 3255      5F507574 
 3255      53747269 
 3255      6E6700
 3256              	.LASF39:
 3257 041a 73697A65 		.ascii	"size\000"
 3257      00
 3258              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
